<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[fukayatsu.dev]]></title>
  <link href="http://blog.fukayatsu.com/atom.xml" rel="self"/>
  <link href="http://blog.fukayatsu.com/"/>
  <updated>2013-11-03T03:16:27+09:00</updated>
  <id>http://blog.fukayatsu.com/</id>
  <author>
    <name><![CDATA[fukayatsu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[半角:全角==1:2な等幅フォントを作る]]></title>
<link href="http://blog.fukayatsu.com/2013/11/03/merge-fonts/"/>
<updated>2013-11-03T02:13:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/11/03/merge-fonts</id>

      <content type="html"><![CDATA[<p>普段プログラミングする時は<a href="http://www.sublimetext.com/3">Sublime Text 3</a>と<a href="http://sourceforge.jp/projects/sfnet_sourcecodepro.adobe/">Source Code Pro</a>を使っているのだけれど、半角:全角の文字幅が1:2じゃなくて気になる時があった。</p>

<p>ちょっと無理矢理な例だけど、こんな感じ:
<img src="https://photos-3.dropbox.com/t/0/AADiNZK_LiJD2_M0TXMRxVv5mlPtTQX2qMbvch8txpwN9A/12/85825/png/2048x1536/3/1383418800/0/2/Screenshot%202013-11-03%2002.07.56.png/1WBSByeieM1FF0IeVHVnxf1LBxkd71dBIeM7uDKfvIA" alt="" /></p>

<ul>
<li>半角スペースが全角文字の半分の幅じゃないので<code>=&gt;</code>が揃わない。もやっとする</li>
</ul>


<h2><a href="http://sourceforge.jp/projects/sfnet_sourcecodepro.adobe/">Source Code Pro</a> と <a href="http://mix-mplus-ipa.sourceforge.jp/migmix/#diff_migmix1p_migmix2p">MigMix 1M</a>の合成</h2>

<p>ベース: <a href="https://github.com/MasayukiFukada/CodeMFont">MasayukiFukada/CodeMFont</a></p>

<h4>ベースからの変更点</h4>

<ul>
<li>Source Code Proの中間フォントに<code>Scale(70)</code>を適用</li>
<li>記号をあまり改変しないように変更。全角スペースの可視化は残した</li>
</ul>


<p><img src="https://photos-4.dropbox.com/t/0/AAD0Ce1z2kn40M8UpH01nkwP-ysqc1hCKeqXUfEk4CmuHg/12/85825/png/1024x768/3/1383418800/0/2/Screenshot%202013-11-03%2002.08.37.png/qto5DmwG8lwZPzjXJOtcBJLThC4eMaWKH1lKXBnWnaM" alt="" /></p>

<ul>
<li>Hashのkeyに日本語が入っていても、もやっとしなくなった。</li>
<li>半角文字が思ったより横に圧縮されたけど、ちょっと使ってたら慣れた</li>
</ul>


<h2>Tips</h2>

<p>Macではフォントを削除→再生成→再インストールしてもキャッシュを消さないと反映されなかった。</p>

<p>キャッシュ削除コマンド: <code>$ atsutil databases -removeUser</code></p>

<h2>TODO</h2>

<ul>
<li>generator公開

<ul>
<li>素材用のフォントを自動的にダウンロードしてフォント生成するやつを作りたい</li>
</ul>
</li>
</ul>

<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/11/03/merge-fonts/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[RubyとLita(chat bot)で自宅のエアコンを操作する]]></title>
<link href="http://blog.fukayatsu.com/2013/08/11/iremocon-and-lita/"/>
<updated>2013-08-11T22:16:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/08/11/iremocon-and-lita</id>

      <content type="html"><![CDATA[<p>以前は<a href="https://github.com/fukayatsu/room_bot/blob/master/julius/roombot.rb">音声認識で家電操作</a>をしてたけど、<br/>
引越しの時に環境が変わったのでちょっとやりかたを変えてみた。</p>

<p><img src="https://lh6.googleusercontent.com/-kIVBmVmPATk/UgOX0He2ECI/AAAAAAAAPFs/QtRvi0Pc464/w701-h526-no/IMG_20130808_220558.jpg" alt="ArduinoとiRemocon" />
ポスター用の剥がせる両面テープで壁に貼ってみた</p>

<p><img src="https://dl.dropboxusercontent.com/u/85825/blog/image/20130811/home-lita.png" alt="home-lita" />
hipchatのAndroidアプリ</p>

<h1>できること</h1>

<ul>
<li>30分おきに温度、湿度、明るさを報告</li>
<li>Hipchatからエアコンと照明のON/OFF

<ul>
<li>最近暑いので、会社を出る前にクーラー入れたりする</li>
</ul>
</li>
<li>毎日8:00に照明ON, 25:00に照明OFF

<ul>
<li>寝起きが良くなった気がする</li>
</ul>
</li>
</ul>


<h1>下準備</h1>

<ul>
<li>天井の照明をリモコン式のものに変更

<ul>
<li>制御が楽なのでONとOFFのボタンが付いているものがよい</li>
</ul>
</li>
<li>hipchatアカウント取得

<ul>
<li>今なら5人まで無料なので、自分の分とbotの分を作る</li>
<li>よく考えたらチャットルームに自分とbotしかいないのって&#8230;</li>
</ul>
</li>
</ul>


<h1>ハードウェア</h1>

<ul>
<li>MacBook Air(サーバ)</li>
<li>赤外線送信

<ul>
<li>iRemocon

<ul>
<li>以前音声認識で家電を操作してた時のを流用</li>
<li>無操作だと5分で接続が切れるので、keep aliveが必要ということを今回はじめて知った</li>
</ul>
</li>
</ul>
</li>
<li>温度、湿度、明るさセンサー

<ul>
<li>Arduino + 秋月電子で買ったパーツ</li>
<li>これも以前使っていたものを流用</li>
</ul>
</li>
</ul>


<h1>ソフトウェア</h1>

<ul>
<li><a href="https://github.com/fukayatsu/home-lita">fukayatsu/home-lita</a>

<ul>
<li>本体</li>
</ul>
</li>
<li><a href="https://github.com/jimmycuadra/lita">jimmycuadra/lita</a>

<ul>
<li>ざっくり言うとhubot(github製bot framework)のRuby版。userの権限管理とかもできる</li>
<li>ちょっと前に会社のhipchat上のbotをhubotからlitaに置き換えたら結構良かったので、今回採用</li>
</ul>
</li>
<li><a href="https://github.com/jimmycuadra/lita-hipchat">jimmycuadra/lita-hipchat</a>

<ul>
<li>litaのhipchat adapter</li>
</ul>
</li>
<li><a href="https://github.com/fukayatsu/lita-schedule">fukayatsu/lita-schedule</a>

<ul>
<li>lita上でcron的なことをするやつ。とりあえず動くぐらいの完成度</li>
</ul>
</li>
<li><a href="https://github.com/r7kamura/iremocon">r7kamura/iremocon</a>

<ul>
<li>iremoconのrubyインタフェース</li>
</ul>
</li>
<li><a href="https://github.com/austinbv/dino">austinbv/dino</a>

<ul>
<li><a href="http://blog.fukayatsu.com/2013/01/23/hello-arduino-with-ruby-and-dino/">Arduino買ったのでRubyとDinoでLチカした - fukayatsu.dev</a>を参照</li>
</ul>
</li>
</ul>


<h1>これからやりたいこと</h1>

<ul>
<li>音声認識、音声再生を復活させたい

<ul>
<li>「今何時？」とか「今日の天気は？」とか「電気消して」とかが地味に便利だった</li>
</ul>
</li>
<li>Androidとかと組み合わせて、自宅から出たら電気が消えるようにしたい

<ul>
<li>端末の自宅wifiへの接続の有無で制御できそう？</li>
</ul>
</li>
<li>Lita本体にschedule機能を入れたい

<ul>
<li>テスト書く</li>
</ul>
</li>
</ul>

<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/08/11/iremocon-and-lita/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Sublime Text 2でGaucheを実行する]]></title>
<link href="http://blog.fukayatsu.com/2013/08/11/run-gauche-with-sublime-text-2/"/>
<updated>2013-08-11T18:57:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/08/11/run-gauche-with-sublime-text-2</id>

      <content type="html"><![CDATA[<p><img src="https://dl.dropboxusercontent.com/u/85825/blog/image/20130811/sublime-scm.png" alt="" /></p>

<h2>設定方法</h2>

<p>[Tools] > [Build System] > [New Build System&#8230;]を選び、<br/>
以下を<code>Gauche.sublime-build</code>のファイル名で保存(ディレクトリは<code>Packages/User/</code>)</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>{
</span><span class='line'>  "cmd": ["gosh", "$file"],
</span><span class='line'>  "selector": "source.lisp",
</span><span class='line'>  "osx": {
</span><span class='line'>    "path": "/usr/local/bin:/opt/local/bin"
</span><span class='line'>  },
</span><span class='line'>  "linux": {
</span><span class='line'>    "path": "/usr/local/bin:/usr/bin"
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>試しに実行してみる</h3>

<p>hello.scm</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>(print "hello, world")
</span><span class='line'>
</span><span class='line'>(print (+ 3 3))
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じに書いて、</p>

<ul>
<li><code>Cmd(Ctrl) + B</code>で実行してみる</li>
</ul>


<p>うまくいくとこんな感じに表示される</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>hello, world
</span><span class='line'>6
</span><span class='line'>[Finished in 0.1s]</span></code></pre></td></tr></table></div></figure>


<h3>実行しても何も表示されない場合</h3>

<ul>
<li><p>[Tools] > [Build System]が<code>Automatic</code>もしくは<code>Gauche</code>になっているかどうか調べる</p></li>
<li><p><code>Ctrl + `</code>で実行時にエラーが発生してないか調べる</p></li>
</ul>


<p><code>UnicodeDecodeError: 'ascii' codec can't decode</code>というエラーの場合は
<a href="https://github.com/maltize/sublime-text-2-ruby-tests/issues/116#issuecomment-11103810">Packages/Default/exec.pyを変更する</a>ことで回避できた</p>

<h3>参考</h3>

<p>以下のページを参考にさせて頂きました</p>

<ul>
<li><p><a href="http://y-anz-m.blogspot.jp/2012/11/sublime-text-2-typescript.html">Y.A.M の 雑記帳: Sublime Text 2 で TypeScript をビルドする</a></p></li>
<li><p><a href="https://github.com/maltize/sublime-text-2-ruby-tests/issues/116">UnicodeDecodeError: &#8216;ascii&#8217; codec can&#8217;t decode · Issue #116 · maltize/sublime-text-2-ruby-tests</a></p></li>
</ul>

<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/08/11/run-gauche-with-sublime-text-2/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[「もうひとつの Scheme 入門」をやってみる#01]]></title>
<link href="http://blog.fukayatsu.com/2013/08/09/yet-another-scheme-abc-01/"/>
<updated>2013-08-09T21:40:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/08/09/yet-another-scheme-abc-01</id>

      <content type="html"><![CDATA[<p>この前<a href="http://connpass.com/event/2933/">10LISP &#8216;00</a>で話題に挙がった<a href="http://www.shido.info/lisp/idx_scm.html">もうひとつの Scheme 入門</a>をやっていこうと思います。</p>

<h1>1. Scheme 処理系のインストール</h1>

<blockquote><p><a href="http://nomnel.net/blog/st2-gauche/">Sublime Text 2でGaucheコードを書くために - 飲んだり寝たり</a></p></blockquote>

<p>↑ これを参考にしました</p>

<h1>2. Scheme を電卓代わりに使う</h1>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gosh> (+ 1 2)
</span><span class='line'>3
</span><span class='line'>gosh> +
</span><span class='line'>#&lt;subr +></span></code></pre></td></tr></table></div></figure>


<p>MzSchemeだと<code>+</code>が評価されると<code>#&lt;procedure:+&gt;</code>となるらしいけど、gaucheだと<code>#&lt;subr +&gt;</code>となった</p>

<h2>2.3. 四則演算</h2>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gosh> (* 2 3 4)
</span><span class='line'>24
</span><span class='line'>gosh> (/ 29 3)
</span><span class='line'>29/3
</span><span class='line'>gosh> (/ 29 3 7)
</span><span class='line'>29/21
</span><span class='line'>gosh> (/ 9 6)
</span><span class='line'>3/2
</span><span class='line'>gosh> (exact->inexact (/ 29 3 7))
</span><span class='line'>1.380952380952381</span></code></pre></td></tr></table></div></figure>


<ul>
<li>この<code>-&gt;</code>ってなんだろ</li>
</ul>


<h3>練習問題 1</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gosh> (* (+ 1 39) (- 53 45))
</span><span class='line'>320
</span><span class='line'>
</span><span class='line'>gosh> (+ (/ 1020 39) (* 45 2))
</span><span class='line'>1510/13
</span><span class='line'>
</span><span class='line'>gosh> (+ 39 48 72 23 91)
</span><span class='line'>273
</span><span class='line'>
</span><span class='line'>gosh> (exact->inexact (/ (+ 39 48 72 23 91) 5))
</span><span class='line'>54.6</span></code></pre></td></tr></table></div></figure>


<h2>2.4 その他の算術関数</h2>

<blockquote><p>商を求めるにはquotient, 余りを求めるには remainder または modulo, 平方根を求めるには sqrt を使います。</p></blockquote>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gosh> (quotient 7 3)
</span><span class='line'>2
</span><span class='line'>
</span><span class='line'>gosh> (modulo 7 3)
</span><span class='line'>1
</span><span class='line'>
</span><span class='line'>gosh> (sqrt 8)
</span><span class='line'>2.8284271247461903
</span></code></pre></td></tr></table></div></figure>


<h3>練習問題 2</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gosh> (* 4 (atan 1))
</span><span class='line'>3.141592653589793
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>gosh> (exp (/ 2 3))
</span><span class='line'>1.9477340410546757
</span><span class='line'>
</span><span class='line'>gosh> (expt 3 4)
</span><span class='line'>81
</span><span class='line'>
</span><span class='line'>gosh> (log 1000)
</span><span class='line'>6.907755278982137</span></code></pre></td></tr></table></div></figure>


<p>あ、解答ちゃんと載ってた&#8230;</p>

<h1>3. リストを作ろう</h1>

<h3>練習問題 1</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gosh> (cons "hi" "everybody")
</span><span class='line'>("hi" . "everybody")
</span><span class='line'>
</span><span class='line'>gosh> (cons 0 '())
</span><span class='line'>(0)
</span><span class='line'>
</span><span class='line'>gosh> (cons 1 (cons 10 100))
</span><span class='line'>(1 10 . 100)
</span><span class='line'>
</span><span class='line'>gosh> (cons 1 (cons 10 (cons 100 '())))
</span><span class='line'>(1 10 100)
</span><span class='line'>
</span><span class='line'>gosh> (cons #\I  (cons "saw" (cons 3 (cons "girls" '()))))
</span><span class='line'>(#\I "saw" 3 "girls")
</span><span class='line'>
</span><span class='line'>#\ってなんだ？
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>gosh> (cons "Sum of" (cons (cons 1 (cons 2 (cons 3 (cons 4 '())))) (cons "is" (cons 10 '()))))
</span><span class='line'>("Sum of" (1 2 3 4) "is" 10)</span></code></pre></td></tr></table></div></figure>


<h2>3.3. quote</h2>

<blockquote><p>&#8230;シンボルやリストなど、評価されると自分自身にならないデータそのものをプログラムに与えるときは quote という命令を使います。</p>

<p>例えば、(+ 2 3) は評価されると 5 になりますが、(quote (+ 2 3)) とすれば (+ 2 3) そのものを プログラムに与えることができます。</p></blockquote>

<p>10lispで言ってた評価の抑制ってこれか。確かに評価されても自分自身になるのであればquote要らないな</p>

<h3>3.3.1. 特殊形式</h3>

<p>括弧の中身を全て評価して括弧の外に値を返す関数以外は<code>特殊形式</code>というらしい。<br/>
quoteとかifとかdefineとか</p>

<p>10lispでやったとこだ!</p>

<h2>3.4 関数 car と cdr</h2>

<h3>練習問題 2</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gosh> (car '(0))
</span><span class='line'>0
</span><span class='line'>gosh> (cdr '(0))
</span><span class='line'>()
</span><span class='line'>gosh> (car '((1 2 3) (4 5 6)))
</span><span class='line'>(1 2 3)
</span><span class='line'>gosh> (cdr '(1 2 3 . 4))
</span><span class='line'>(2 3 . 4)
</span><span class='line'>gosh> (cdr (cons 3 (cons 2 (cons 1 '()))))
</span><span class='line'>(2 1)</span></code></pre></td></tr></table></div></figure>


<h3>3.5. 関数 list</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gosh> (list)
</span><span class='line'>()
</span><span class='line'>gosh> (list 2)
</span><span class='line'>(2)
</span><span class='line'>gosh> (car '(1 2 3))
</span><span class='line'>1
</span><span class='line'>gosh> (car (list 1 2 3))
</span><span class='line'>1</span></code></pre></td></tr></table></div></figure>


<p>とりあえず今日はここまで</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/08/09/yet-another-scheme-abc-01/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[#10LISP '00に参加しました]]></title>
<link href="http://blog.fukayatsu.com/2013/08/03/10lisp-00/"/>
<updated>2013-08-03T19:08:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/08/03/10lisp-00</id>

      <content type="html"><![CDATA[<p><img src="https://lh5.googleusercontent.com/-KSyUm3Hqe1w/Ufy-lxzDrZI/AAAAAAAAO5I/Fnqipc6H2Aw/w699-h524-no/IMG_20130803_144817.jpg" alt="" /></p>

<ul>
<li><a href="http://connpass.com/event/2933/">10LISP &#8216;00 - connpass</a></li>
<li><a href="http://togetter.com/li/543387">10LISP &#8216;00 まとめ - Togetter</a></li>
<li><a href="http://www.slideshare.net/kazh98/ss-24868347">再帰でつくる、計算の世界</a></li>
<li><a href="https://speakerdeck.com/ayato0211/jin-karahazimeruschemeru-men">今からはじめるScheme入門 // Speaker Deck</a></li>
<li><a href="http://twilog.org/fukayatsu/date-130803">ふかやつ(@fukayatsu)/2013年08月03日 - Twilog</a></li>
</ul>


<hr />

<p>そろそろ関数型言語やりたいなーと思っていた時に、<a href="https://twitter.com/ayato_p">@ayato_p</a>さんが<a href="http://10lisp.info/">10LISP</a>を始めるというのでほいほい参加しました。<br/>
最初の一歩を踏み出すきっかけを作ってくれて本当に感謝しています :)</p>

<p>今回は00回目ということで、schemeを手を動かしながらざっくりと体験する感じでした。</p>

<h3>話題に上がった書籍やサイト</h3>

<ul>
<li>Scheme 手習い

<ul>
<li>200ページ弱の対話形式の薄い本</li>
<li>数値計算とかに興味がないと挫折しやすいとか聞いた</li>
</ul>
</li>
<li>ハッカーと画家

<ul>
<li>これを読んでlisp始めましたとという人も</li>
</ul>
</li>
<li>魔術師本(SICP)</li>
<li>素数夜曲</li>
<li><a href="http://www.kkaneko.com/pro/">Scheme によるプログラミング入門</a></li>
<li><a href="http://www.shido.info/lisp/idx_scm.html">もうひとつの Scheme 入門</a>

<ul>
<li>とりあえずこれやってみようかな</li>
</ul>
</li>
</ul>


<h3>雑感</h3>

<ul>
<li>末尾再帰とそうじゃない再帰の違いが分かった</li>
<li>&#8217;()と()の違いが分かった</li>
<li>代入と束縛についてざっくり理解した</li>
<li>次回も参加したい

<ul>
<li>こんどは懇親会も</li>
</ul>
</li>
</ul>

<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/08/03/10lisp-00/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[[WIP]Leap MotionとRubyで遊ぶ]]></title>
<link href="http://blog.fukayatsu.com/2013/07/25/leap-motion-and-ruby/"/>
<updated>2013-07-25T20:23:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/07/25/leap-motion-and-ruby</id>

      <content type="html"><![CDATA[<p><img src="https://lh6.googleusercontent.com/-r7Cit35PdGs/Ue1PUJS9T3I/AAAAAAAAOrU/15GcUYE-Gc4/w739-h555-no/IMG_20130723_001953-MOTION.gif" alt="" /></p>

<p>↑ leap motionのデモアプリで遊んでいる図</p>

<hr />

<p>今年の2月にorderした<a href="https://www.leapmotion.com/">Leap Motion</a>が先日(7/21)届いたので、<br/>
ここ数日<a href="https://airspace.leapmotion.com/">アプリをダウンロード</a>したりして遊んでいる。<br/>
(長時間姿勢を維持する必要があるアプリは結構疲れる)</p>

<p>せっかくなので自分でも何か作ろうと思って<a href="https://developer.leapmotion.com/docs">Developerページ</a>を見ると、
今のところ公式にSDKが存在するのは</p>

<ul>
<li>C++</li>
<li>Java</li>
<li>Python</li>
<li>C# and Unity</li>
<li>JavaScript</li>
</ul>


<p>の5つ(6つ？)で、残念ながらRubyのSDKは無かった。</p>

<p>ということで、以下Leap MotionをRubyで使うためにやったことの雑記</p>

<h2>gemを探す</h2>

<p>ちょっと探したところ、</p>

<blockquote><p><a href="https://github.com/glejeune/ruby-leap-motion">glejeune/ruby-leap-motion</a> &#8220;Ruby interface to the Leap Motion Controller&#8221;</p></blockquote>

<p>というのを見つけた。最終更新が2ヶ月前なので最新のSDKには対応していないのかもしれないけど、とりあえずこれを使ってみた</p>

<h3>SWIG?</h3>

<p>この<code>ruby-leap-motion</code>は<code>SWIG</code>というのを使っているらしかった。</p>

<blockquote><p><a href="http://ja.wikipedia.org/wiki/SWIG">SWIG - Wikipedia</a><br/>
  SWIG (Simplified Wrapper and Interface Generator) は、 C/C++ で書かれたプログラムやライブラリを、Tcl/Tk、Perl、Python、Ruby、PHP、Lua などのスクリプト言語や、Java、C#、Scheme、Ocaml などの言語に接続するためのオープンソースのツールである。</p>

<p><a href="https://github.com/glejeune/ruby-leap-motion/blob/master/ext/swig/Leap.i">ruby-leap-motion/ext/swig/Leap.i at master · glejeune/ruby-leap-motion</a></p></blockquote>

<p>にはRuby用の設定が含まれているけど、最新のSDKの中の<code>Leap.i</code>には無かった。glejeuneさんが自分で追加したのだろうか。とりあえず今は保留。</p>

<h3>座標を取得</h3>

<p>とりあえず何らかの座標が取得できないと始まらないので(ジェスチャー認識もあるけど)、</p>

<blockquote><p><a href="https://github.com/glejeune/ruby-leap-motion/blob/master/ext/swig/Leap.i">ruby-leap-motion/ext/swig/Leap.i at master · glejeune/ruby-leap-motion</a></p></blockquote>

<p>これを見て試行錯誤して、指先の座標を取得することができた。</p>

<h3>テルミンつくろう</h3>

<p>画面を描写するのは大変そうだし、音だけ出ればいいやと思ってテルミン作ることにした。<br/>
先人↓</p>

<iframe width="560" height="315" src="http://blog.fukayatsu.com//www.youtube.com/embed/SE6XV3nLDUk" frameborder="0" allowfullscreen></iframe>


<h3>テルミンの演奏法を調べる</h3>

<blockquote><p><a href="http://www.prhymx.com/theremin/text2.html">テルミン演奏法の説明</a></p></blockquote>

<p>右手を右に移動させると音が高くなって、左手を上に移動させると音が大きくなるらしい</p>

<blockquote class="twitter-tweet"><p><a href="https://twitter.com/fukayatsu">@fukayatsu</a> 青山テルミン！&#8230; 何でもありません。</p>&mdash; dopin (@dopingoo) <a href="https://twitter.com/dopingoo/statuses/360042327479287808">July 24, 2013</a></blockquote>


<script async src="http://blog.fukayatsu.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<h2>どうやって音鳴らそう?</h2>

<p>Windowsならbeepとか使えた気がするけど、Macで音を出すプログラム書いた事なかったので困った。</p>

<blockquote><p><a href="https://github.com/nagachika/ruby-coreaudio">nagachika/ruby-coreaudio</a></p></blockquote>

<p>ちょっと調べて↑これを使わせてもらうことにした。</p>

<h2>とりあえず動くようにした</h2>

<blockquote><p><a href="https://github.com/fukayatsu/leap-motion-sandbox">fukayatsu/leap-motion-sandbox</a></p></blockquote>

<p><a href="https://dl.dropboxusercontent.com/u/85825/blog/sound/2013-07-25/leap-t.mp3">↑録音してみた</a></p>

<p>SDKを<code>~/Development/LeapSDK</code>に置いた場合はこんな感じで実行できるかもしれない(※後述)↓</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ git clone git@github.com:fukayatsu/leap-motion-sandbox.git
</span><span class='line'>$ cd leap-motion-sandbox
</span><span class='line'>$ bundle config build.leap-motion --with-leap-lib=~/Development/LeapSDK/lib --with-leap-include=~/Development/LeapSDK/include
</span><span class='line'>$ bundle
</span><span class='line'>$ bundle exec ruby theremin.rb</span></code></pre></td></tr></table></div></figure>


<h3>既知の問題</h3>

<ul>
<li>音程が変わるときに音がブツブツ切れる

<ul>
<li><a href="http://nagano.monalisa-au.org/archives/204">この辺</a> の処理が必要かも</li>
</ul>
</li>
<li>しばらく動かすと、<code>[FATAL] failed to allocate memory</code>で落ちる</li>
<li>なぜか <code>ruby 2.0.0p195 (2013-05-14 revision 40734) [x86_64-darwin12.3.0]</code>でしか<code>bundle</code>が成功しない

<ul>
<li>むしろなぜp195で成功したのか&#8230;</li>
</ul>
</li>
</ul>


<h2>今後について</h2>

<ul>
<li><code>[FATAL] failed to allocate memory</code>の原因を探る</li>
<li>bundleの検証</li>
<li>Core Audioをもう少し深堀りする</li>
<li>PythonのSDKを試してみる</li>
</ul>

<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/07/25/leap-motion-and-ruby/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[5月の渋谷.rbに行ってきた]]></title>
<link href="http://blog.fukayatsu.com/2013/05/15/shibuya-rb/"/>
<updated>2013-05-15T23:33:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/05/15/shibuya-rb</id>

      <content type="html"><![CDATA[<p><img src="https://lh6.googleusercontent.com/-FFX9CCTABXk/UZOF9giDK2I/AAAAAAAANp0/lH4aFxkcLbE/w865-h649-no/IMG_20130515_195243.jpg" alt="" /></p>

<ul>
<li><a href="http://www.zusaar.com/event/720005">渋谷.rb[:20130515] on Zusaar</a></li>
<li><a href="http://togetter.com/li/503459">渋谷.rb[:20130515]のまとめ #shibuyarb - Togetter</a></li>
</ul>


<p>&#8211;</p>

<ul>
<li>今回の会場はDeNAさん(ヒカリエ)のスゴイ会議室</li>
<li>&#8220;じょーかじゃさん！&#8221;</li>
<li>さくらのクラウドのクーポンもらった

<ul>
<li>何に使おうかな</li>
</ul>
</li>
<li>twilioとgem: wangiryを試した

<ul>
<li>面白くて自分にワン切りしまくった</li>
<li>モーニングコールとか自動化できそう</li>
</ul>
</li>
<li>次回はなにかLTする</li>
</ul>

<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/05/15/shibuya-rb/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[git-about.meをリリースしました]]></title>
<link href="http://blog.fukayatsu.com/2013/05/05/git-about-dot-me/"/>
<updated>2013-05-05T12:00:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/05/05/git-about-dot-me</id>

      <content type="html"><![CDATA[<p><a href="http://git-about.me/">GitAboutMe  -  &#8220;ABOUT ME&#8221; for Git users</a></p>

<h2>使いかた</h2>

<ul>
<li><a href="http://git-about.me/">git-about.me</a> でユーザ名と公開鍵を登録</li>
<li>git clone, edit file, git push</li>
</ul>


<p>例: <a href="http://git-about.me/fukayatsu">git-about.me/fukayatsu</a></p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ git clone git@git-about.me:fukayatsu about-fukayatsu
</span><span class='line'>$ cd about-fukayatsu
</span><span class='line'>(edit README.md)
</span><span class='line'>$ git commit -am 'Update README.md'
</span><span class='line'>$ git push origin master</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Git版のabout.meです

<ul>
<li>(劣化版github pagesともいう)</li>
</ul>
</li>
<li>他のユーザのプロフィールをgit cloneできます</li>
<li>デザインとか、細かい調整がまだ終わっていない</li>
</ul>


<h2>作った理由</h2>

<ul>
<li>PHP疲れ</li>
<li>プログラマブルにリポジトリを操作するの面白そう

<ul>
<li>実際面白かった</li>
</ul>
</li>
<li>rails周りの開発、運用の経験値を上げたい

<ul>
<li>capstranoを初めてまともに使った</li>
</ul>
</li>
</ul>


<h2>使った技術要素</h2>

<ul>
<li>aws-ec2-micro</li>
<li>nginx</li>
<li>unicorn</li>
<li>ruby 2.0.0-p0</li>
<li>rails 4.0.0.rc1</li>
<li>capstrano</li>
<li>gitolite</li>
<li>grit</li>
<li>ムームードメイン</li>
</ul>


<h2>その他</h2>

<blockquote><p><a href="http://naoty.hatenablog.com/entry/2012/07/17/221530">cui-about.meをリリースしました - naoty.to_s</a></p></blockquote>

<p>にインスパイアされました。 thanks! :)</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/05/05/git-about-dot-me/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[引越しの目論見]]></title>
<link href="http://blog.fukayatsu.com/2013/05/03/plan-to-move/"/>
<updated>2013-05-03T22:45:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/05/03/plan-to-move</id>

      <content type="html"><![CDATA[<iframe width="425" height="350" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.co.jp/maps?f=d&amp;source=s_d&amp;saddr=T%C5%8Dky%C5%8D-to,+Shibuya-ku,+Shibuya,+%EF%BC%93%E4%B8%81%E7%9B%AE%EF%BC%91%EF%BC%97&amp;daddr=&amp;hl=en&amp;geocode=FWYUIAId4rdTCClf4m19WYsYYDE9pVl9Vutemg&amp;sll=39.692337,140.34416&amp;sspn=2.88688,4.559326&amp;gl=jp&amp;brcurrent=3,0x60188b5bc0620bf5:0xaa0e3a1086a3617,0&amp;ttype=now&amp;noexp=0&amp;noal=0&amp;sort=def&amp;mra=ls&amp;ie=UTF8&amp;t=m&amp;start=0&amp;ll=35.657104,139.704423&amp;spn=0.006102,0.00912&amp;z=16&amp;output=embed"></iframe>


<br /><small><a href="https://maps.google.co.jp/maps?f=d&amp;source=embed&amp;saddr=T%C5%8Dky%C5%8D-to,+Shibuya-ku,+Shibuya,+%EF%BC%93%E4%B8%81%E7%9B%AE%EF%BC%91%EF%BC%97&amp;daddr=&amp;hl=en&amp;geocode=FWYUIAId4rdTCClf4m19WYsYYDE9pVl9Vutemg&amp;sll=39.692337,140.34416&amp;sspn=2.88688,4.559326&amp;gl=jp&amp;brcurrent=3,0x60188b5bc0620bf5:0xaa0e3a1086a3617,0&amp;ttype=now&amp;noexp=0&amp;noal=0&amp;sort=def&amp;mra=ls&amp;ie=UTF8&amp;t=m&amp;start=0&amp;ll=35.657104,139.704423&amp;spn=0.006102,0.00912&amp;z=16" style="color:#0000FF;text-align:left">View Larger Map</a></small>


<p>先日オフィスがここ↑に移転したのと、今住んでいるマンションがもうすぐ更新の時期なので引っ越そうかと思っている。</p>

<ul>
<li>会社・駅・スーパーまで徒歩10分以内</li>
<li>1Kで居室が7畳ぐらい</li>
<li>2階以上</li>
</ul>


<p>あとは今住んでるところより静かだといいな。<br/>
夜中に酔っぱらいの叫びとかが聞こえてこないところ。</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/05/03/plan-to-move/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[スタンディングデスク]]></title>
<link href="http://blog.fukayatsu.com/2013/04/25/standing-desk/"/>
<updated>2013-04-25T19:52:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/04/25/standing-desk</id>

      <content type="html"><![CDATA[<p>前から気になっていたスタンディングデスクを導入してみた。</p>

<p>とりあえずversion 1は積み本デスク。</p>

<p><img src="https://lh3.googleusercontent.com/-dvXBbyYPvRI/UXi75w_0OqI/AAAAAAAAMvs/HFPZOC_-CRs/w487-h649/IMG_20130425_141257.jpg" alt="" /></p>

<p>午後から4時間半ぐらい立って仕事してみたけど、足が疲れるのでたまに5分ぐらい椅子に座って休憩したり、ストレッチしながら作業してた。1日だけだとあんまり効能がわからないので、しばらく続けてみるつもり。</p>

<p>オフィスの引っ越しが終わったら、<a href="http://lifehacking.jp/2013/01/ikea-standing-desk/">IKEAの家具で自作するスタンディングデスク</a>みたいなちゃんとした奴を作りたい。</p>

<p>自分の場合、大体100cm(キーボード用)と130cm(ディスプレイ用)の棚があればよさそうだった。</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/04/25/standing-desk/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[4月のShibuya.rbの集まりに行ってきた箇条書き]]></title>
<link href="http://blog.fukayatsu.com/2013/04/17/shibuyarb-2013-04-17/"/>
<updated>2013-04-17T23:59:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/04/17/shibuyarb-2013-04-17</id>

      <content type="html"><![CDATA[<ul>
<li><a href="http://www.zusaar.com/event/640004">渋谷.rb[:20130417] on Zusaar</a></li>
<li><a href="http://togetter.com/li/489435">渋谷.rb[:20130417]のまとめ #shibuyarb - Togetter</a></li>
</ul>


<h1>memo</h1>

<ul>
<li>そろそろデプロイツールとかちゃんと使って行きたい

<ul>
<li>chefはboxen的にMacの環境構築するのに使い始めた</li>
</ul>
</li>
<li>渋谷でJavaで研修中の人たちがいて、勝手に懐かしい感じになってた

<ul>
<li>今度話聞いてみたい

<ul>
<li>社内.rbとは</li>
</ul>
</li>
</ul>
</li>
<li>最近ブログもLTもおろそかになっていて、後ろめたし

<ul>
<li>近いうちにデプロイとかテスト環境構築について書く</li>
</ul>
</li>
<li>もくもくタイムに<a href="https://chrome.google.com/webstore/detail/tag-visibler/gglgkdbiphkgeiljmlfdgbaoefhjmcmo">chrome extension</a>作った

<ul>
<li>16個目。上限まであと4つ。</li>
<li>せっかくなので会話したほうが良かったと反省</li>
</ul>
</li>
<li><a href="https://gist.github.com/fukayatsu/5231578">zusaarの特定のイベントの参加者を一括.rb</a>で参加した人をフォローしてみた

<ul>
<li>herokuとかで月1回発動するようにしておくと捗るかもしれない</li>
</ul>
</li>
</ul>

<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/04/17/shibuyarb-2013-04-17/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[zusaarのgem作った]]></title>
<link href="http://blog.fukayatsu.com/2013/03/24/zusaar-gem/"/>
<updated>2013-03-24T20:48:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/03/24/zusaar-gem</id>

      <content type="html"><![CDATA[<blockquote class="twitter-tweet"><p>いままでずっとZusaarのことZussarだと勘違いしてた</p>&mdash; ふかやつ (@fukayatsu) <a href="https://twitter.com/fukayatsu/status/315701285150158848">March 24, 2013</a></blockquote>


<script async src="http://blog.fukayatsu.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>gemをpublishする直前に気付いてリネーム祭りをした。<br/>
そしてこれからもちょくちょく間違える気がする。</p>

<ul>
<li><a href="https://rubygems.org/gems/zusaar">zusaar | RubyGems.org | your community gem host</a></li>
<li><a href="https://github.com/fukayatsu/zusaar">fukayatsu/zusaar · GitHub</a></li>
<li><a href="http://www.zusaar.com/doc/api.html">APIリファレンス｜参加費の決済もできるイベント開催支援サービス「Zusaar」</a></li>
</ul>


<p>そもそも検索系のAPIしかないので、自動でイベント参加とかはできないのが残念。</p>

<h1>使用例</h1>

<script src="https://gist.github.com/fukayatsu/5231578.js"></script>


<h1>その他</h1>

<h3>APIのバグ？</h3>

<p>APIを叩いた時に、<code>profile_url</code>が<code>http//twitter.com/foobar</code>みたいな感じで<code>:</code>が抜けて返ってきたので、お問い合せフォームから報告しておいた。</p>

<p>今のことろはgemの側で正しいurlに直している。</p>

<h3>followのrate limit</h3>

<blockquote><p><a href="https://dev.twitter.com/docs/api/1.1/post/friendships/create">POST friendships/create | Twitter Developers</a></p></blockquote>

<p>には<code>Rate Limited? No</code>って書いてあるけど、どうも15分に15回に制限されてるような挙動をする。</p>

<p>それで制限に引っかかると、環境によって<code>Twitter::Error::ClientError</code>が発生してハマった。</p>

<h3>参考にしたgem</h3>

<blockquote><p><a href="https://github.com/sferik/twitter">sferik/twitter · GitHub</a></p></blockquote>

<p>attr_reader上書きしてるとことか、faraday gemつかってるとことかいろいろ真似してみた</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/03/24/zusaar-gem/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[渋谷.rb[:20130320](拡大版)に参加してきた]]></title>
<link href="http://blog.fukayatsu.com/2013/03/21/shibuyarb-20130320/"/>
<updated>2013-03-21T12:45:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/03/21/shibuyarb-20130320</id>

      <content type="html"><![CDATA[<ul>
<li><a href="http://www.zusaar.com/event/545003">渋谷.rb[:20130320](拡大版) on Zusaar</a></li>
<li><a href="http://togetter.com/li/475115">渋谷.rb[:20130320](拡大版) #shibuyarb - Togetter</a></li>
</ul>


<hr />

<p><img src="https://lh5.googleusercontent.com/-eolSfZRxNjU/UUnSI7c8n_I/AAAAAAAALfw/nNEqGd6v5tg/w249-h187/IMG_20130320_125424.jpg" alt="" /></p>

<p><a href="http://shibuyarblunch.heroku.com/">#shibuyarblunch</a>に初参加。</p>

<p><a href="http://tabelog.com/tokyo/A1303/A130301/13028533/">龍盛菜館 渋谷店</a>で麻婆茄子定食を食べた。相変わらず量が多い。</p>

<hr />

<p><img src="https://lh6.googleusercontent.com/-tBOaOlf1REU/UUnSMT8HFuI/AAAAAAAALf8/ov2-4TqUAdo/w249-h187/IMG_20130320_184322.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-1KgepSumN-I/UUnSPZXl_EI/AAAAAAAALgI/WGsshSf3zhA/w249-h187/IMG_20130320_184332.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-9GzfYww5uQg/UUnSTEFbEXI/AAAAAAAALgU/3XAQbGi7654/w249-h187/IMG_20130320_184335.jpg" alt="" /></p>

<p>セッション1と2は興味のあるテーマ毎に小グループを作って議論したりもくもくしたりという感じだった。</p>

<p>自分は大江戸Ruby会議03で言及されてた<a href="http://atcoder.jp/">AtCoder</a>を<a href="https://twitter.com/Shindo200">Shindo200</a>さんとペアプロみたいな感じで解いたりした。</p>

<hr />

<p>セッション3はLTやりたい人がLTする形式。</p>

<p>自分は最近作ってるChrome Extensionについて発表した。</p>

<script async class="speakerdeck-embed" data-id="b158aec0740b01306b5122000a1c8083" data-ratio="1.2994923857868" src="http://blog.fukayatsu.com//speakerdeck.com/assets/embed.js"></script>


<p>会場ではChrome Extensionを作ったことがあるのが数人ぐらいだったので、発表する意義はあったのではないかと思う。</p>

<p><a href="http://developer.chrome.com/extensions/getstarted.html">Getting Started: Building a Chrome Extension</a>をその場でやって、<a href="https://chrome.google.com/webstore/detail/one-click-matz/becmpkhmoakfcmfggogachmemiceahda">Chrome ウェブストアに公開</a>してみた。</p>

<p>あとは、<a href="https://developer.chrome.com/extensions/samples.html">Sample Extensions</a>をいくつか動かしてみると理解が深まると思う</p>

<hr />

<p><img src="https://lh5.googleusercontent.com/-KP0kruBlLeo/UUnSZmCtFWI/AAAAAAAALgg/F4f4_0z0Fy8/w249-h187/IMG_20130320_194519.jpg" alt="" /></p>

<p>懇親会 at <a href="http://voyagegroup.com/business/office/office015/">AJITO</a></p>

<p><img src="https://lh5.googleusercontent.com/-dzADzxb4ICA/UUnSmrEpcCI/AAAAAAAALg4/HAns47EGVOU/w249-h187/IMG_20130320_210448.jpg" alt="" /></p>

<p>マミった&#8230;</p>

<p><img src="https://lh6.googleusercontent.com/-WGsnYaiTy4k/UUnSpyNN7dI/AAAAAAAALhE/KfpmvNUIF6E/w249-h187/IMG_20130320_233453.jpg" alt="" /></p>

<p><a href="http://tabelog.com/tokyo/A1303/A130301/13113820/">俺流塩らーめん</a>であさりラーメンを食べた</p>

<p><img src="https://lh4.googleusercontent.com/-s7Swgycv_wQ/UUnSvohQp_I/AAAAAAAALhQ/Ij-SctFLoIs/w249-h187/IMG_20130321_000748.jpg" alt="" /></p>

<p>帰り際に桜が咲いてるのに気付く</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/03/21/shibuyarb-20130320/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[大江戸Ruby会議03に参加してきた #odrk03]]></title>
<link href="http://blog.fukayatsu.com/2013/03/19/oedo-ruby-kaigi-03/"/>
<updated>2013-03-19T21:56:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/03/19/oedo-ruby-kaigi-03</id>

      <content type="html"><![CDATA[<p>以前から気になっていたAsakusa.rbの雰囲気を感じられる良い機会かなと思って参加して来ました。</p>

<ul>
<li><a href="http://regional.rubykaigi.org/oedo03">Oedo Rubykaigi 03 - Mar 16, 2013</a></li>
<li><a href="http://togetter.com/li/472551">大江戸Ruby会議03 - Togetter</a></li>
<li><a href="http://twilog.org/fukayatsu/date-130316">ふかやつ(@fukayatsu)/2013年03月16日 - Twilog</a></li>
</ul>


<p><img src="https://lh3.googleusercontent.com/-lXnCdlUNDRs/UURvLSePrbI/AAAAAAAALdw/IZ08d-XT39Q/s848/IMG_20130316_093846.jpg" alt="" />
レクホールの催し物が若干気になる&#8230;</p>

<p><img src="https://lh4.googleusercontent.com/--gRJ-hReS6Y/UUhihs3_vtI/AAAAAAAALfQ/4XluTapjcrc/s718/photo.jpg" alt="" />
engine yardのステッカーは早速PCに貼りました</p>

<h2>セッションについて</h2>

<p><a href="http://regional.rubykaigi.org/oedo03/schedule">セッション一覧(+資料)はこちら</a></p>

<p>特に印象に残っているセッションを書きたいと思います</p>

<ul>
<li>GC

<ul>
<li>ほとんど知識なくて悔しい</li>
</ul>
</li>
<li>mikutter

<ul>
<li>壇上でしゃべっている人からfavられる人続出</li>
</ul>
</li>
<li>某レシピ共有サイトの Ruby 1.9 対応で大変苦労しました

<ul>
<li>どこの会社も多かれ少なかれそういうことあるんだなと妙に安心した</li>
</ul>
</li>
<li>最後のセッション</li>
</ul>


<iframe src="http://www.slideshare.net/slideshow/embed_code/17269278" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="http://www.slideshare.net/authorNari/ruby-17269278" title="桐島、Rubyやめるってよ" target="_blank">桐島、Rubyやめるってよ</a> </strong> from <strong><a href="http://www.slideshare.net/authorNari" target="_blank">Narihiro Nakamura</a></strong> </div></p>

<p>涙がでるぐらい笑ったセッションだったけど、あとで@nari3さんのブログ見たら、</p>

<blockquote><p>それでも彼は深夜残業（素振り）を続けているのです。<br/>
傍目から見ると意味のないようにも見えると思いますが、リリースを続けるわけです。<br/>
その原動力はまさにGC研究部（映画部）と同じだと考えています。<br/>
だから実は全然、笑えないのです。でも笑っちゃいましたよね。<br/>
<a href="http://d.hatena.ne.jp/authorNari/20130317/1363476355">http://d.hatena.ne.jp/authorNari/20130317/1363476355</a></p></blockquote>

<p>と書いてあったので、一度映画を見てからスライドを見返す必要がありそう。</p>

<h2>今回twitterアイコンとリアルを一致させた人</h2>

<ul>
<li><a href="https://twitter.com/katsyoshi">katsyoshi (katsyoshi)さん</a></li>
<li><a href="https://twitter.com/komagata">Masaki Komagata (komagata)さん</a></li>
<li><a href="https://twitter.com/hrysd">豆乳 (hrysd)さん</a></li>
<li><a href="https://twitter.com/shishi4tw">shishi (shishi4tw)さん</a></li>
<li><a href="https://twitter.com/hsbt">SHIBATA Hiroshi (hsbt)さん</a></li>
<li><a href="https://twitter.com/nari3">nari3 (nari3)さん</a></li>
<li><a href="https://twitter.com/mrkn">Kenta Murata (mrkn)さん</a></li>
</ul>


<p>直接話した人もそうでない人も。以前からフォローしている人でも、直接見たり話したりしたことがあるとよりTL上の存在感が増す気がします。</p>

<h2>あとで試そうと思ったやつとか</h2>

<ul>
<li>いつもと違う地域.rbに参加する</li>
<li>全文検索</li>
<li>真鵺道</li>
<li>OSSのバグを修正してコントリビュートする

<ul>
<li><a href="https://twitter.com/yuki24">Yuki Nishijima (yuki24) さん</a>の発表聞いて思った</li>
</ul>
</li>
<li><a href="https://rubygems.org/gems/what_methods">gem: what_methods</a>

<ul>
<li>AをBにするメソッドを探してくれるやつ</li>
<li><code>"a".what? "A"</code>とか</li>
</ul>
</li>
<li><a href="http://atcoder.jp/">AtCoder (アットコーダー)</a>

<ul>
<li>日本語によるプログラミングコンテスト</li>
<li>Rubyだと<code>1.9.2</code>が使用できるっぽい</li>
</ul>
</li>
<li><a href="http://www.amazon.co.jp/dp/B00ANFT8R8">桐島、部活やめるってよ</a>

<ul>
<li>小説から読むべき？</li>
</ul>
</li>
</ul>


<h2>反省</h2>

<ul>
<li>もっといろんな人と話す</li>
<li>もっと早くblogを書く</li>
</ul>


<h2>おまけ</h2>

<blockquote class="twitter-tweet"><p>この辺修学旅行で来たことあるような無いような</p>&mdash; ふかやつ (@fukayatsu) <a href="https://twitter.com/fukayatsu/status/312751519168606208">March 16, 2013</a></blockquote>


<script async src="http://blog.fukayatsu.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>中学の修学旅行かな</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/03/19/oedo-ruby-kaigi-03/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Rails4とRuby2で簡単なWebサービスを作ってみた]]></title>
<link href="http://blog.fukayatsu.com/2013/03/03/mitsuworu-rails4-and-ruby2/"/>
<updated>2013-03-03T16:20:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/03/03/mitsuworu-rails4-and-ruby2</id>

      <content type="html"><![CDATA[<p>作ったのはこれ > <a href="http://mitsuwo.net/">みつをる</a></p>

<p><a href="http://mitsuwo.net/cards/1"><img src="https://s3-ap-northeast-1.amazonaws.com/mitsuwo/images/cards/1362077672.png" alt="1362077672" /></a></p>

<p>いわゆる縦書ジェネレータ的なやつ。</p>

<h1>経緯</h1>

<p>先週の火曜日に社内chat(hipchat)で<a href="http://tegaki-maker.com/">手書きメーカー</a>で作成された画像(「えんじにあだもの　あつを」)が流れていて、いまいちそれっぽくなかったので自分で作ることにした。</p>

<p>ちょうどRails 4.0.0.beta1のgemが公開されたタイミングだったので、今後の為に試してみることにした。</p>

<h1>開発ログ</h1>

<p>平日の帰宅後を使って3日程度掛かったのでコミットログを振り返りながら何をしたか書く</p>

<h2>火曜夜</h2>

<p>ドメインの確保と任意のフォントで縦書画像を生成する部分の検証。</p>

<ul>
<li>下準備

<ul>
<li>mitsuwo.netのドメインを取得</li>
<li>s3のバケットを確保</li>
</ul>
</li>
<li>Initial commit</li>
<li>rails g scaffold card author:string body:text image:string

<ul>
<li>モデル名はとりあえず<code>card</code>にした。</li>
<li>add mini_magick</li>
<li>この時はmini_magickで画像に文字を埋め込めると勘違いしていた</li>
</ul>
</li>
<li>add RMagick

<ul>
<li>mini_magickと入れ替え</li>
</ul>
</li>
<li>draw.annotateのテスト

<ul>
<li>画像に文字列描写できた</li>
</ul>
</li>
<li>縦書き対応

<ul>
<li>一文字ずつ描写してむりやり縦書き対応</li>
<li><code>ー</code>を<code>｜</code>に置き換えたり</li>
</ul>
</li>
</ul>


<h2>水曜夜</h2>

<p>プロトタイプ完成まで</p>

<ul>
<li>プレビューボタンとダミー画像を追加</li>
<li>rails g model TmpImage author:string body:text data:binary

<ul>
<li>この時は、プレビュー用の一時的な画像をDBに保存しようとしていた</li>
</ul>
</li>
<li>delete tmp image model

<ul>
<li>やっぱり別方式でやることにした</li>
</ul>
</li>
<li>プレビューの実装

<ul>
<li>base64エンコードでjson中に含めてしまうことにした。</li>
<li>シンプル</li>
</ul>
</li>
<li>add aws-sdk gem

<ul>
<li>公開時にS3にアップロードする</li>
</ul>
</li>
</ul>


<h2>木曜夜</h2>

<p>本番公開のための準備とデプロイ</p>

<ul>
<li>twitter facebookボタンの追加</li>
<li>meta tagの追加</li>
<li>add favicon追加</li>
<li><p>本番環境構築</p>

<ul>
<li>AWS

<ul>
<li>EC2 micro</li>
<li>S3</li>
<li>Route 53</li>
</ul>
</li>
<li>nginx</li>
<li>unicorn</li>
</ul>
</li>
<li><p>本番デプロイ</p></li>
</ul>


<h2>金曜夜(T2-Study#5)</h2>

<p>おまけ</p>

<ul>
<li>ビール飲みながら</li>
<li>hubot scriptを作成

<ul>
<li>最初jsonでPOSTしようとしたが日本語が含まれているとうまくいかなかった</li>
</ul>
</li>
</ul>


<div><script src='https://gist.github.com/5065136.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>


<p>例えば<code>hubot mitsuwo 寿司が&lt;br&gt;食べたいのです,名無し</code>とコマンドを打つと、
結果をhipchatに貼ってくれる。便利。</p>

<p><a href="http://mitsuwo.net/cards/52"><img src="https://s3-ap-northeast-1.amazonaws.com/mitsuwo/images/cards/1362299581.png" alt="1362299581" /></a></p>

<h1>まとめ</h1>

<p>あんまり複雑なことはしていないので、Rails 4とかRuby 2とかはあまり意識しなかった。</p>

<p>思ったよりも時間が掛かった。半分ぐらいの時間で作れるようになりたい。</p>

<p>nginx・unicorn・RMagickは初めて使ったので、良い経験になった。</p>

<p>自分が必要とするものを作るのはやはり楽しい。</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/03/03/mitsuworu-rails4-and-ruby2/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[github上の時刻表示をちょっと見やすくするchrome extension]]></title>
<link href="http://blog.fukayatsu.com/2013/02/24/timezone-on-github/"/>
<updated>2013-02-24T19:46:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/02/24/timezone-on-github</id>

      <content type="html"><![CDATA[<p>github上でコミット時刻が<code>3 month ago</code>とか表示されているとき、カーソルを重ねてtooltipを見ても<code>-08:00</code>なタイムゾーンで表示されるのでわかりにくい。</p>

<p>ちょっと探した範囲ではそれを解決するような拡張機能は見つからなかったので、試しに作ってみた。</p>

<p>しばらく使ってみようと思う。</p>

<ul>
<li><a href="https://chrome.google.com/webstore/detail/github-localtime/nnicjaooimionienobllhkaohdjohfhm">Chrome ウェブストア - github-localtime</a></li>
<li><a href="https://github.com/fukayatsu/github-localtime-crx">fukayatsu/github-localtime-crx · GitHub</a></li>
</ul>


<h2>screen shots</h2>

<ul>
<li><p>before
<img src="https://raw.github.com/fukayatsu/github-localtime-crx/master/screen_shots/before.png" alt="before" /></p></li>
<li><p>after
<img src="https://raw.github.com/fukayatsu/github-localtime-crx/master/screen_shots/after.png" alt="after" /></p></li>
</ul>


<h2>既知の不具合</h2>

<ul>
<li>一定時間経つと表示が元に戻る

<ul>
<li>とりあえずリロードで対処&#8230;</li>
</ul>
</li>
</ul>

<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/02/24/timezone-on-github/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[最近のコントリビュート]]></title>
<link href="http://blog.fukayatsu.com/2013/02/16/recent-contributions/"/>
<updated>2013-02-16T00:08:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/02/16/recent-contributions</id>

      <content type="html"><![CDATA[<h3><a href="https://github.com/austinbv/dino/pull/24">Add some colors to Components::RgbLed by fukayatsu · Pull Request #24 · austinbv/dino</a></h3>

<p><a href="http://fk82.dev:88/2013/01/23/hello-arduino-with-ruby-and-dino/">Arduino買ったのでRubyとDinoでLチカした</a>ときに使ったDinoには、デフォルトでRgbLedというコンポーネントが用意されているのだけど、メソッドが#red, #blue, #greenとかしか無かったので、#cyanとか#offとかを追加。</p>

<h3><a href="https://github.com/mroth/lolcommits/pull/89">Enable to change font by fukayatsu · Pull Request #89 · mroth/lolcommits</a></h3>

<blockquote><p><a href="http://docs.komagata.org/5031">lolcommitsを使い出して２週間 - komagata</a></p></blockquote>

<p>この記事を読んで自分も試してみたのだけど、日本語でコミットメッセージを書くと<code>?????</code>みたいな感じになってしまったので、フォントを指定できるようにした。</p>

<p>次のバージョンに含まれるらしい。</p>

<h3><a href="https://github.com/mobiruby/mobiruby.github.com/pull/1">Fix section id by fukayatsu · Pull Request #1 · mobiruby/mobiruby.github.com</a></h3>

<p>デブサミでmobirubyのセッションを聞いている時に発見。<br/>
その場でpull-requestしたらすぐに取り込まれた。</p>

<h1>雑感</h1>

<p>結構pull-requestするまでのフットワークが軽くなってきた気がする。<br/>
マージされると嬉しいので、できることからコツコツ続けて行きたい。</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/02/16/recent-contributions/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[デブサミ2013に行ってきた]]></title>
<link href="http://blog.fukayatsu.com/2013/02/15/devsumi2013/"/>
<updated>2013-02-15T23:32:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/02/15/devsumi2013</id>

      <content type="html"><![CDATA[<p><a href="http://event.shoeisha.jp/detail/1/gaiyo">開催概要：Developers Summit 2013</a></p>

<p><img src="https://lh3.googleusercontent.com/-mVkcuqHTS4I/UR1l-qWkKOI/AAAAAAAAK58/ZYwcIvnpcKc/s612/IMG_20130214_123955.jpg" alt="" /></p>

<h1>初めてのデブサミ</h1>

<p>去年は申し込んだものの、結局行けなかったので今年はなんとしても行こうと思っていた。<br/>
2日間参加できて嬉しい。</p>

<h1>参加の様子</h1>

<p>基本的に参加したセッションでは多めにつぶやいたのでこちらをご覧頂ください</p>

<ul>
<li><a href="http://twilog.org/fukayatsu/date-130214">ふかやつ(@fukayatsu)/2013年02月14日 - Twilog</a></li>
<li><a href="http://twilog.org/fukayatsu/date-130215">ふかやつ(@fukayatsu)/2013年02月15日 - Twilog</a></li>
</ul>


<h1>印象に残った場面</h1>

<h3>受付混みすぎ</h3>

<p>初日に会場に着いたのが10時ちょうどぐらいだったが、受付で10分ぐらい並んでた気がする</p>

<h3>3Dプリンタとかの話(14-E-1)</h3>

<ul>
<li>ハードウェア好きなので数年以内に3Dプリンタ買っちゃいそう。</li>
</ul>


<h3>wifi tetheringからusb tetheringに切り替えた</h3>

<ul>
<li>Wifiの方は混雑してたので若干快適に</li>
</ul>


<h3>セッション中にpull-request送るなど(14-A-5)</h3>

<p><a href="https://github.com/mobiruby/mobiruby.github.com/pull/1">Fix section id by fukayatsu · Pull Request #1 · mobiruby/mobiruby.github.com</a></p>

<ul>
<li>htmlをちょっと直しただけ</li>
</ul>


<h3>ニコニコ静画（電子書籍）開発チームの話(14-A-6)</h3>

<ul>
<li>リポジトリ名に自分の嫁の名前をつけるらしい</li>
<li>割れ窓を作らないようにするところを自分も頑張りたい</li>
</ul>


<h3>これは買わざるを得ない(15-B-5)</h3>

<ul>
<li><a href="http://www.oreilly.co.jp/books/9784873115894/">O&#8217;Reilly Japan - SQLアンチパターン</a></li>
<li>絶対に自分にとってプラスになると思った。あとプレゼンすごく面白かった</li>
</ul>


<h1>その他</h1>

<ul>
<li>雅叙園が異世界だった</li>
<li>スーツの人もそれなりにいた。あと、手帳でメモとってる人が結構多かった。</li>
<li>かなりハードだったので2日目は参加するセッション減らした</li>
<li>次も絶対参加する(多分)</li>
</ul>

<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/02/15/devsumi2013/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[東京Ruby会議3日目&大和田Ruby会議に参加してました]]></title>
<link href="http://blog.fukayatsu.com/2013/02/10/tkrk10-3rd/"/>
<updated>2013-02-10T23:16:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/02/10/tkrk10-3rd</id>

      <content type="html"><![CDATA[<ul>
<li><a href="http://tokyorubykaigi.doorkeeper.jp/events/2603">シン・東京Ruby会議10 劇場版 ||= - Tokyo Ruby Kaigi 10</a></li>
<li><a href="http://rubykaigi.tdiary.net/20130203.html">「大和田Ruby会議」開催のお知らせ #tkrk10 - RubyKaigi Nikki(2013-02-03)</a></li>
<li><a href="http://atnd.org/events/36852">東京Ruby会議10 3日目 準公式懇親会 : ATND</a></li>
<li><a href="http://twilog.org/fukayatsu/date-130210">ふかやつ(@fukayatsu)/2013年02月10日 - Twilog</a></li>
</ul>


<p><img src="https://lh4.googleusercontent.com/-EgGCmMNxOl8/UReSd4n04vI/AAAAAAAAKt8/Ama5rgneav8/s807/IMG_20130210_211130.jpg" alt="" /></p>

<h1>会場</h1>

<blockquote><p><a href="http://www.shibu-cul.jp/">渋谷区文化総合センター大和田</a></p></blockquote>

<p>家から10分ちょっとぐらいでとても行きやすくてよかった</p>

<h1>セッション</h1>

<p>家に返ってから若干テンション下がることがあったので箇条書きですみません。</p>

<ul>
<li>atcs_as_rubyistリストバンド

<ul>
<li>(欲しいなー)</li>
</ul>
</li>
<li>Ruby関連書籍を紹介

<ul>
<li>たのしいRuby</li>
<li>初めてのRuby</li>
<li>メタプログラミングRuby</li>
<li>(上2つは持ってないのであとで買おうかな)</li>
</ul>
</li>
<li>Enumerableとyieldを理解したタイミングで成長を実感した

<ul>
<li>(yieldをもっと理解したい)</li>
</ul>
</li>
<li>「this is 何」 #javascript</li>
<li>&#8220;記述量で選ぶ？&#8221; #tkrk10 > Smell in Rails Apps (in Sapporo RubyKaigi03) - http://slidesha.re/YjiqrA</li>
<li>「Rubyによるデザインパターン」「継続的デリバリー」

<ul>
<li>(これも持っていないのであとで買おう)</li>
</ul>
</li>
<li>screenx.tvすげー</li>
<li>ギークハウス沖縄楽しそう</li>
<li>&#8220;(あえて)ドキュメントを読まない&#8221;

<ul>
<li>自動生成以外のドキュメントはいまいち信用出来ないというお話</li>
</ul>
</li>
<li>JOJO大切</li>
</ul>


<h1>懇親会</h1>

<p>行きたかったのですが、次の日がデブサミの振替出勤のため自重しましたorz</p>

<h1>その他</h1>

<p>やっぱり、こういう場で発表する側になりたい。</p>

<p>あと、お腹がすいたので帰宅してから肉じゃが作ったりしてました。</p>

<p><img src="https://lh3.googleusercontent.com/--Sd5VIB4GW8/UReaVwCDNlI/AAAAAAAAKw4/c-KS-0nJNME/s807/IMG_20130210_220130.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-6Q-cEyEQBYQ/URedQmIi_GI/AAAAAAAAKyg/rmVGAUcSI3w/s807/IMG_20130210_221401.jpg" alt="" /></p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/02/10/tkrk10-3rd/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[roomba-hack-02 はんだ付け&動作テスト編]]></title>
<link href="http://blog.fukayatsu.com/2013/01/26/roomba-hack-02/"/>
<updated>2013-01-26T21:19:00+09:00</updated>
<id>http://blog.fukayatsu.com/2013/01/26/roomba-hack-02</id>

      <content type="html"><![CDATA[<p>↓ MacBookとBluetoothで接続したRoomba</p>

<p><img src="https://lh4.googleusercontent.com/-_ikpMnQiunk/UQPL94eDwbI/AAAAAAAAKRI/xxWbqYDC4o4/s536/photo.jpg" alt="" /></p>

<p>MacbookPro上でRubyからbluetooth経由でRoombaにコマンドを送って、掃除を開始させるところまでできました。</p>

<p>手順とかちょっとハマったところとかを書いていきます。</p>

<p>パーツに関しては<a href="http://fukayatsu.github.com/2013/01/21/roomba-hack-01/">前回の記事</a>をご参照下さい</p>

<h2>BlueSMiRFにコネクタを取り付ける</h2>

<p><img src="https://lh3.googleusercontent.com/-aMETeVkId8A/UQEsOt8eENI/AAAAAAAAJ2Y/PfwIMT9sH1c/s715/IMG_20130124_214029.jpg" alt="" /></p>

<p>BlueSMiRFは1つ7000円ぐらいするので、取り外ししやすいようにコネクタをつけておきます。</p>

<p>今回はXHコネクタというものを使ってみました。手元に圧着ペンチがなかったので、ラジオペンチで無理やり圧着させましたが、専用の工具を買ったほうが良さそうです。</p>

<p><img src="https://lh5.googleusercontent.com/-PXJSo9Du9rY/UQEtqFM0_cI/AAAAAAAAJ50/KmObgoXQLVQ/s715/IMG_20130124_214755.jpg" alt="" /></p>

<h2>3端子レギュレータにコンデンサを付ける</h2>

<p><img src="https://lh4.googleusercontent.com/-rlAFOr_6sEo/UQEzVNeNfuI/AAAAAAAAJ8Y/qD-oHa4bVC4/s715/IMG_20130124_221213.jpg" alt="" /></p>

<p>Roombaから取れる電源は16Vなので、そのままではBlueSMiRF(5V)につなげません。<br/>
間に3端子レギュレータを接続します。</p>

<p>(回路図は秋月のパーツセットに入っています。)</p>

<h2>コネクタに3端子レギュレータを(無理やり)付ける</h2>

<p><img src="https://lh5.googleusercontent.com/-iLczJynhha4/UQE1wzwRriI/AAAAAAAAJ_4/JOHefyb_-aE/s715/IMG_20130124_222217.jpg" alt="" /></p>

<p>写真だとちょっとわかりにくいのですが、コネクタのVCCの配線を切って3端子レギュレータの<code>in</code>と<code>out</code>をつないでいます。</p>

<p>GNDの接続も忘れずに。</p>

<h2>Roombaに接続</h2>

<p><img src="https://lh4.googleusercontent.com/-cQGNFrgIBXo/UQFIO3Y61aI/AAAAAAAAKBc/lEUb7lSsj0k/s715/IMG_20130124_234043.jpg" alt="" /></p>

<p>XHコネクタと単線をつないで、単線の反対側をroombaにつないでみます。</p>

<p>ちなみに1番目のピンと6番目のピンは白い線でつないであります。</p>

<p>どこに何をつなぐかは、<a href="http://media.wiley.com/product_ancillary/17/04700727/DOWNLOAD/iRobot%20Roomba%20Open%20Interface%20Specification.pdf">公式のリファレンス</a>を参照しましょう。</p>

<p>とりあえずVCCとGNDが合っていればLEDが赤く点滅します。</p>

<p>それから、RxとTxのつなぎ方に注意です。</p>

<pre><code>BlueSMiRFのRx ---&gt; RoombaのTx
BlueSMiRFのTx ---&gt; RoombaのRx
</code></pre>

<p>という感じにつなぎます。じゃないと僕みたいに小一時間なんで動かないんだろうと悩むことになりかねません。</p>

<h2>MacとBlueSMiRFのペアリング</h2>

<p>これはBluetoothマウスとかと同じような流れで行います。<br/>
確かパスコードは無しに設定した気がします。</p>

<h2>シリアルポートの設定</h2>

<p><img src="https://lh5.googleusercontent.com/-lWJ3AnXfTCo/UQPTthLkqhI/AAAAAAAAKSk/_hnBeL9CWI0/s713/Screen+Shot+2013-01-26+at+21.11.42.png" alt="" /></p>

<p>ペアリングに成功したら、シリアルポートの設定をします。</p>

<p>Bluetooth設定の画面で、デバイス(FireFly-&#8230;)を選択して歯車ボタンから<code>Edit serial ports...</code>を選ぶと↑この画像のような画面になります。</p>

<p>この時の<code>Path: /dev/tty.FireFly...</code>は次で使うのでメモっておきましょう。</p>

<h2>RubyからRoombaを操作するテスト</h2>

<p>まずターミナルを開いて、必要なgemをinstallしておきます。</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ gem install serialport</span></code></pre></td></tr></table></div></figure>


<p>次にirb(もしくはpry)から対話環境でシリアル通信してみます。</p>

<p><strong>※Roombaの電源は入れておきましょう</strong></p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ irb
</span><span class='line'>
</span><span class='line'>irb(main):001:0> require 'serialport'
</span><span class='line'>irb(main):002:0> sp = SerialPort.new('/dev/tty.FireFly-86A2-SPP', 115200, 8, 1, 0)
</span><span class='line'># '/dev/tty.FireFly-86A2-SPP'はさっきメモしたもの
</span><span class='line'># この時点でBlueSMiRFのLEDが緑に点灯するはず
</span><span class='line'>
</span><span class='line'>irb(main):003:0> sp.write 128.chr
</span><span class='line'>irb(main):004:0> sp.write 130.chr
</span><span class='line'>irb(main):005:0> sp.write 135.chr
</span><span class='line'># roombaが掃除を始めるはず</span></code></pre></td></tr></table></div></figure>


<p>128とか130とかが気になる人は<a href="http://media.wiley.com/product_ancillary/17/04700727/DOWNLOAD/iRobot%20Roomba%20Open%20Interface%20Specification.pdf">公式のリファレンス</a>を読みましょう。</p>

<h1>つづく</h1>

<p>次はいよいよTwitter連携とかをしていきたいと思います。</p>
<p><a rel="bookmark" href="http://blog.fukayatsu.com/2013/01/26/roomba-hack-02/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
</feed>
