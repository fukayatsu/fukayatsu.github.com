<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-12-04T11:57:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>おかゆ</title>
    <link rel="alternate" href="http://blog.url.com/2013/12/04/rice-gruel/"/>
    <id>http://blog.url.com/2013/12/04/rice-gruel/</id>
    <published>2013-12-04T11:57:00Z</published>
    <updated>2013-12-04T12:52:49+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href="/2013/11/29/advent-calendar-2013/"&gt;fukayatsu Advent Calendar 2013&lt;/a&gt; - 4日目&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;昨日の午後から体調が悪くてまともに食べてないのでおかゆを作った。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-04.jpg" /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://cookpad.com/recipe/1288348"&gt;３０分で完成☆1人用土鍋で簡単お粥 by michila [クックパッド]&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
  </entry>
  <entry>
    <title>Fukayatsu Room Controller (FRC)</title>
    <link rel="alternate" href="http://blog.url.com/2013/12/03/frc/"/>
    <id>http://blog.url.com/2013/12/03/frc/</id>
    <published>2013-12-03T13:08:00Z</published>
    <updated>2013-12-04T12:52:49+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href="/2013/11/29/advent-calendar-2013/"&gt;fukayatsu Advent Calendar 2013&lt;/a&gt; - 3日目&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;おなかいたい&lt;/p&gt;

&lt;h2&gt;背景&lt;/h2&gt;

&lt;p&gt;&lt;a href="/2013/08/11/iremocon-and-lita/"&gt;RubyとLita(chat bot)で自宅のエアコンを操作する&lt;/a&gt;ことができるようになって便利になったものの、&lt;br&gt;
横になってPCを使っている時などにHipChatを開いてコマンドを打つのが若干めんどくさくもあった。&lt;/p&gt;

&lt;h2&gt;Chrome Appsでリモコンを作った&lt;/h2&gt;

&lt;p&gt;問題を解決するために、1日目の&lt;a href="/2013/12/01/chrome-apps-bootstrap/"&gt;Chrome Apps Bootstrap&lt;/a&gt;を使って部屋のリモコンを作り、(無駄に)&lt;a href="https://chrome.google.com/webstore/detail/fukayatsu-room-controller/imkaddobkcpdgncmlokkpcmgfkcflfak"&gt;公開した。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;家電制御に使っているHipChatのroom_idとtokenがあれば、誰でもうちの家電を(無駄に)操作できる。&lt;/p&gt;

&lt;h2&gt;screenshots&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dockの中に登録しておけば、2クリックで電気が消せるので捗る&lt;br&gt;
&lt;img alt="w50" src="/images/2013-12-03-d.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;メインタブ&lt;br&gt;
&lt;img src="/images/2013-12-03-a.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;設定タブ: chromeにログインしていれば他のPCでも同期される。&lt;br&gt;
&lt;img src="/images/2013-12-03-b.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;技術的なこと&lt;/h2&gt;

&lt;p&gt;コードはこのあたり&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/fukayatsu/home-lita/blob/master/chrome_app/src/js/window.js"&gt;home-lita/chrome_app/src/js/window.js at master · fukayatsu/home-lita&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;リモコンのボタンを押すと、hipchat上のroomにコマンドが書き込まれ、それがbotに処理される。&lt;br&gt;
bot側は特に変更の必要が無いので楽だった。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2013-12-03-c.png" /&gt;&lt;/p&gt;

&lt;h2&gt;余談&lt;/h2&gt;

&lt;p&gt;chrome web storeの拡張機能・Appの公開の上限は20個で、これで上限に達した。&lt;br&gt;
でも半分ぐらいはあまり意味のない拡張機能なのであとで記事に書いたら順次非公開にしていこうと思う。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Grape on Rails and Session</title>
    <link rel="alternate" href="http://blog.url.com/2013/12/02/grape-on-rails-and-session/"/>
    <id>http://blog.url.com/2013/12/02/grape-on-rails-and-session/</id>
    <published>2013-12-02T08:43:00Z</published>
    <updated>2013-12-04T12:52:49+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href="/2013/11/29/advent-calendar-2013/"&gt;fukayatsu Advent Calendar 2013&lt;/a&gt; - 2日目&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/intridea/grape"&gt;intridea/grape&lt;/a&gt;でAPIをRailsにmountして使っていて、両方のCookieSessionを共有したかった。&lt;br&gt;
最終的に以下のようなhelper methodを用意することに落ち着いた。&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="c1"&gt;# routes.rb&lt;/span&gt;
&lt;span class="no"&gt;FooBar&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="nf"&gt;.routes.draw&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;mount&lt;/span&gt; &lt;span class="no"&gt;API&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/api&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="highlight ruby"&gt;&lt;span class="c1"&gt;# api.rb&lt;/span&gt;
&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;API&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Grape&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;API&lt;/span&gt;
  &lt;span class="nb"&gt;format&lt;/span&gt; &lt;span class="ss"&gt;:json&lt;/span&gt;

  &lt;span class="n"&gt;helpers&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;session&lt;/span&gt;
      &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;Rack&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Session&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Abstract&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ENV_SESSION_KEY&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;mount&lt;/span&gt; &lt;span class="no"&gt;API&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;V1&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;h1&gt;余談&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Session is responsible for lazily loading the session from store.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/docs/rails/ActionDispatch/Request/Session"&gt;ActionDispatch::Request::Session&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;にあるようにsessionの情報は&lt;code&gt;Session#[]&lt;/code&gt;や&lt;code&gt;Session#[]=&lt;/code&gt;の初回呼び出し時にloadされ、&lt;br&gt;
その前に&lt;code&gt;Session#inspect&lt;/code&gt;が呼ばれると&lt;code&gt;#&amp;lt;Session [id] not yet loaded&amp;gt;&lt;/code&gt;が返ってくる。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>chrome-apps-bootstrap</title>
    <link rel="alternate" href="http://blog.url.com/2013/12/01/chrome-apps-bootstrap/"/>
    <id>http://blog.url.com/2013/12/01/chrome-apps-bootstrap/</id>
    <published>2013-12-01T01:31:00Z</published>
    <updated>2013-12-04T12:52:49+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href="/2013/11/29/advent-calendar-2013/"&gt;fukayatsu Advent Calendar 2013&lt;/a&gt; - 1日目&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;技術調査の目的で、Twitter BootstrapとjQueryを使って&lt;a href="https://github.com/fukayatsu/chrome-apps-bootstrap"&gt;Chrome Appsのサンプルを作った&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;開発方法はChrome Extensionとほぼ同じだけど、Chrome AppsはChromeが立ち上がっていなくても動作する（実際はAppsを立ち上げるとChromeのプロセスも立ち上がる）。&lt;/p&gt;

&lt;p&gt;ChromeさえインストールされていればWindows/Mac/Linuxで動作するデスクトップアプリがWebの知識(html/css/js)で作れて、それが簡単に公開できる。便利。&lt;/p&gt;

&lt;p&gt;&lt;img src="https://raw.github.com/fukayatsu/chrome-apps-bootstrap/master/screenshots/Screen%20Shot%202013-11-30%20at%2021.11.00.png" /&gt;&lt;/p&gt;

&lt;h2&gt;.app&lt;/h2&gt;

&lt;p&gt;macだとインストール時に&lt;code&gt;*.app&lt;/code&gt;を作ってくれるので、spotlightやランチャーの検索対象になる。&lt;br&gt;
&lt;img src="https://raw.github.com/fukayatsu/chrome-apps-bootstrap/master/screenshots/Screen%20Shot%202013-11-30%20at%2021.07.03.png" /&gt;&lt;/p&gt;

&lt;h2&gt;雑感&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;WebAPIベースのデスクトップアプリを作るなら、一番楽な選択肢なのでは&lt;/li&gt;
&lt;li&gt;最初&lt;code&gt;Chrome Apps Bootstrap&lt;/code&gt;という名前でChrome Web Storeにアップロードしようとしたら、ガイドライン違反だと警告された&lt;/li&gt;
&lt;li&gt;アプリのviewに&lt;code&gt;&amp;lt;a href=&amp;quot;http://example.com/foo&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;とか書いても反応しない

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;target=&amp;quot;_new&amp;quot;&lt;/code&gt;とか&lt;code&gt;target=&amp;quot;_blank&amp;quot;&lt;/code&gt;のように、target属性を指定する必要がある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Macのmenu barにアイコンがでるようなアプリを作りたくてgoogle hangoutsのChrome Appを調べてたら、内部で&lt;a href="http://developer.chrome.com/extensions/npapi.html"&gt;NPAPI Plugins (deprecated)&lt;/a&gt;を使っていた。

&lt;ul&gt;
&lt;li&gt;それなら普通にMacApp作ったほうが楽そう。

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/19795976/macruby-on-os-x-mavericks"&gt;MacRubyを使ったMacAppがMavericksで動きさえすれば...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;参考リンク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://developer.chrome.com/apps/about_apps.html"&gt;What Are Chrome Apps? - Google Chrome&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;公式ドキュメント&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleChrome/chrome-app-samples"&gt;GoogleChrome/chrome-app-samples&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;公式サンプル集のリポジトリ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;公式ドキュメントをちょっと見て、後はサンプルコードを試しながらコード読めばよいと思う。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>fukayatsu Advent Calendar 2013</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/29/advent-calendar-2013/"/>
    <id>http://blog.url.com/2013/11/29/advent-calendar-2013/</id>
    <published>2013-11-29T03:08:00Z</published>
    <updated>2013-12-04T12:52:49+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;去年はいくつかの技術系Advent Calendarに参加したけど、&lt;br&gt;
今年は &lt;code&gt;1人 Advent Calendar&lt;/code&gt; をやることにした。&lt;/p&gt;

&lt;h1&gt;目次&lt;/h1&gt;

&lt;p&gt;※ 予定なのでタイトルとか内容は変更される可能性あり&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="/2013/12/01/chrome-apps-bootstrap/"&gt;Chrome Apps Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/2013/12/02/grape-on-rails-and-session/"&gt;Grape on Rails and Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/2013/12/03/frc/"&gt;Fukayatsu Room Controller (FRC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/2013/12/04/rice-gruel/"&gt;おかゆ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;deploy with lita&lt;/li&gt;
&lt;li&gt;MacとUS配列とGoogle 日本語入力&lt;/li&gt;
&lt;li&gt;ChatBotとGoogle Analytics&lt;/li&gt;
&lt;li&gt;Chrome Platform APIs&lt;/li&gt;
&lt;li&gt;Middleman&lt;/li&gt;
&lt;li&gt;&amp;gt; 突然の死 &amp;lt;&lt;/li&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;(未定)&lt;/li&gt;
&lt;li&gt;今年買ってよかった物&lt;/li&gt;
&lt;li&gt;今年の振り返り&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>say-japanese-gem</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/26/say-japanese/"/>
    <id>http://blog.url.com/2013/11/26/say-japanese/</id>
    <published>2013-11-26T14:07:00Z</published>
    <updated>2013-12-04T12:52:49+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="https://rubygems.org/gems/say-japanese"&gt;say-japanese&lt;/a&gt;というRubyから日本語を喋らせるGemを作った(Mac限定)。&lt;/p&gt;

&lt;p&gt;ちょっと調べた段階で、&lt;a href="https://github.com/smart/say"&gt;smart/say&lt;/a&gt;を見つけたけど、日本語の音声に対応していないのと作者がgithub上で活動していないようなので作ることに。&lt;/p&gt;

&lt;p&gt;今のところvoiceは&lt;code&gt;Kyoko&lt;/code&gt;と&lt;code&gt;Otoya&lt;/code&gt;だけに対応している。&lt;/p&gt;

&lt;h2&gt;サンプルコード&lt;/h2&gt;
&lt;pre class="highlight text"&gt;$ gem install say-japanese
&lt;/pre&gt;&lt;pre class="highlight ruby"&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;say/japanese&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;オブジェクト指向スクリプト言語 ルビー&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;set_say_as_default&lt;/span&gt; &lt;span class="ss"&gt;:otoya&lt;/span&gt;

&lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;オブジェクト指向スクリプト言語 ルビー&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;say_as&lt;/span&gt; &lt;span class="ss"&gt;:kyoko&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ルビーとは、&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;say_as&lt;/span&gt; &lt;span class="ss"&gt;:otoya&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;EOT&lt;/span&gt;&lt;span class="sh"&gt;
  オープンソースの動的なプログラミング言語で、
  シンプルさと高い生産性を備えています。
  エレガントな文法を持ち、自然に読み書きができます。
&lt;/span&gt;&lt;span class="no"&gt;EOT&lt;/span&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;デフォルトの音声はkyoko&lt;/li&gt;
&lt;li&gt;文字列に改行が入っている場合は&lt;code&gt;。&lt;/code&gt;に置き換えている&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Otoya&lt;/h2&gt;

&lt;iframe width="420" height="315" src="//www.youtube.com/embed/2KRD09whqB4?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Lionで追加されたKyoko(女声)につづいてMavericksから追加されたOtoya(男声)。&lt;br&gt;
動画の自己紹介では&amp;quot;Otoya&amp;quot;が&amp;quot;あといや&amp;quot;みたいに聞こえる。&lt;/p&gt;

&lt;p&gt;他のvoiceデータの名前からしてOtoyaも名前の方なんだろうけど、&lt;br&gt;
ちょっと苗字っぽいとおもって調べてみた。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www2s.biglobe.ne.jp/~suzakihp/index40.html"&gt;全国の苗字（名字）１１万種&lt;/a&gt;によると、&lt;code&gt;男谷(オトヤ)&lt;/code&gt;さんが実在するらしい。&lt;/p&gt;
</content>
  </entry>
</feed>
