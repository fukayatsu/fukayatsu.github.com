<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fukayatsu.dev</title>
  <subtitle>under development</subtitle>
  <id>http://blog.fukayatsu.com/</id>
  <link href="http://blog.fukayatsu.com/"/>
  <link href="http://blog.fukayatsu.com/feed.xml" rel="self"/>
  <updated>2014-01-15T14:50:00Z</updated>
  <author>
    <name>fukayatsu</name>
  </author>
  <entry>
    <title>渋谷.rb[:20140115]に参加してきた</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/15/shibuyarb-20140115/"/>
    <id>http://blog.fukayatsu.com/2014/01/15/shibuyarb-20140115/</id>
    <published>2014-01-15T14:50:00Z</published>
    <updated>2014-01-15T14:58:13+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://togetter.com/li/616609"&gt;渋谷.rb[:20140115]のまとめ #shibuyarb - Togetterまとめ&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AJITO最高&lt;/li&gt;
&lt;li&gt;Fitbitが欲しくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/ruby/www.ruby-lang.org.git&lt;/code&gt;した&lt;/li&gt;
&lt;li&gt;&lt;a href="https://theta360.com/s/6AF"&gt;全天球画像 | RICOH THETA&lt;/a&gt;すげー&lt;/li&gt;
&lt;li&gt;LTした&lt;/li&gt;
&lt;/ul&gt;

&lt;script async class="speakerdeck-embed" data-id="3e4bb5206002013193892a4592a1f90c" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
</content>
  </entry>
  <entry>
    <title>Raspberry Piを使ってトイレの空き情報を確認できるようにした</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/12/rest-room-api/"/>
    <id>http://blog.fukayatsu.com/2014/01/12/rest-room-api/</id>
    <published>2014-01-12T07:20:00Z</published>
    <updated>2014-01-15T14:58:13+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="/images/2014-01-12-1389502288_1.jpg" /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/ucchusma/ofbnhnlaccejlhdfefcgmffilffhnipg"&gt;Chrome ウェブストア - ucchusma&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;アイコンはあまり目立たないようにした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用中&lt;br&gt;
&lt;img alt="w50" src="/images/2014-01-12-1389500588_1.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;空き&lt;br&gt;
&lt;img alt="w50" src="/images/2014-01-12-1389500588_2.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;背景&lt;/h1&gt;

&lt;p&gt;オフィスのフロアにトイレがひとつしかなく、何度も空いているかどうか確認しに行くのが面倒だった。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://heavens-door.info/"&gt;ヘブンズ･ドア　〜私が行ったら空いてるトイレ〜&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;先日これを見て自分で作ることにした。&lt;/p&gt;

&lt;p&gt;raspberry piを触りたい欲とか、ハンダ付け欲とかもあった。&lt;/p&gt;

&lt;h1&gt;仕組み&lt;/h1&gt;

&lt;p&gt;&lt;img src="/images/2014-01-12-1389501835_1.jpg" /&gt;&lt;br&gt;
raspberry piはひたすらセンサーデータをherokuに送り続け、clientがそれをpollingする形にした。&lt;br&gt;
当初はraspberry pi上にweb serverを置こうかと思ったけど、台数が増えたりlocalのipが変わったりすることを考えてherokuを併用することにした。&lt;/p&gt;

&lt;h1&gt;材料&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;本体: 長期運用を考えてケース付きのを買った&lt;/p&gt;

&lt;iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=atsfky-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B00DGKUHFE" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"&gt;&lt;/iframe&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SDカード: 8GBで十分だったかも&lt;/p&gt;

&lt;iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=atsfky-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B003VNKNEQ" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"&gt;&lt;/iframe&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;無線LAN子機: 動作報告があったので&lt;/p&gt;

&lt;iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=atsfky-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B003NSAMW2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"&gt;&lt;/iframe&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;モーションセンサ: 開発の裏話的なやつが面白かった&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://panasonic.co.jp/ism/eco/napion/"&gt;松下の省エネ技術 | にぎりこぷしのエコの細道 | ナピオン-１ | イズム「ism」 | Panasonic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sengoku.co.jp/mod/sgk_cart/detail.php?code=7AXC-MAGW"&gt;パナソニック電工 ＡＭＮ３１１１１ ＮａＰｉＯｎ　ＭＰモーションセンサ（黒）　標準検出タイプ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;その他&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;抵抗(10kΩ, 15kΩ)&lt;/li&gt;
&lt;li&gt;コンデンサ(1μF)&lt;/li&gt;
&lt;li&gt;単線&lt;/li&gt;
&lt;li&gt;ホットボンド&lt;/li&gt;
&lt;li&gt;ユニバーサル基盤の切れ端&lt;/li&gt;
&lt;li&gt;ジャンパワイヤ(オス-メス)

&lt;ul&gt;
&lt;li&gt;なくても何とかなったけどあったほうが良い...&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ブレッドボード

&lt;ul&gt;
&lt;li&gt;回路テスト用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;プッシュスイッチ

&lt;ul&gt;
&lt;li&gt;シャットダウンスイッチ用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;配線図&lt;/h1&gt;

&lt;p&gt;&lt;img src="/images/2014-01-13-1389549785_1.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://fritzing.org/"&gt;Fritzing&lt;/a&gt;で図を書くの楽しい。&lt;br&gt;
コンデンサはなくても多分問題ないので省いた。&lt;/p&gt;

&lt;h1&gt;code&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/ucchusma-pi"&gt;fukayatsu/ucchusma-pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/ucchusma-web"&gt;fukayatsu/ucchusma-web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/fukayatsu/ucchusma-crx"&gt;fukayatsu/ucchusma-crx&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/home/pi/set_gpio_pins.sh&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="k"&gt;for &lt;/span&gt;pin &lt;span class="k"&gt;in &lt;/span&gt;4; &lt;span class="k"&gt;do
   &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$pin&lt;/span&gt; &amp;gt; /sys/class/gpio/export
   chown -R www-data:pi /sys/class/gpio/gpio&lt;span class="nv"&gt;$pin&lt;/span&gt;
   chmod -R g+w /sys/class/gpio/gpio&lt;span class="nv"&gt;$pin&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;/home/pi/shutdown-daemon.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nv"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;7      &lt;span class="c"&gt;#使用するGPIOポート&lt;/span&gt;
&lt;span class="nv"&gt;PUSHTIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3  &lt;span class="c"&gt;#押す秒数&lt;/span&gt;

&lt;span class="c"&gt;#初期設定&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$GPIO&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt; /sys/class/gpio/export
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;in&amp;quot;&lt;/span&gt; &amp;gt; /sys/class/gpio/gpio&lt;span class="nv"&gt;$GPIO&lt;/span&gt;/direction
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;high&amp;quot;&lt;/span&gt; &amp;gt; /sys/class/gpio/gpio&lt;span class="nv"&gt;$GPIO&lt;/span&gt;/direction

&lt;span class="c"&gt;#5秒間押されるまで待つ&lt;/span&gt;
&lt;span class="nv"&gt;cnt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$cnt&lt;/span&gt; -lt &lt;span class="nv"&gt;$PUSHTIME&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;do
  &lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;cat /sys/class/gpio/gpio&lt;span class="nv"&gt;$GPIO&lt;/span&gt;/value&lt;span class="sb"&gt;`&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nv"&gt;cnt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;expr &lt;span class="nv"&gt;$cnt&lt;/span&gt; + 1&lt;span class="sb"&gt;`&lt;/span&gt;
  &lt;span class="k"&gt;else
    &lt;/span&gt;&lt;span class="nv"&gt;cnt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
  &lt;span class="k"&gt;fi
  &lt;/span&gt;sleep 1
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="c"&gt;#シャットダウンの実行&lt;/span&gt;
shutdown -h now
&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;参考: &lt;a href="http://blog.livedoor.jp/victory7com/archives/32699844.html"&gt;Raspberry Piブログ : [コラム] 第8回『ボタン長押しでシャットダウンする電源ボタンを作ろう』&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;/etc/rc.local&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="c"&gt;#!/bin/sh -e&lt;/span&gt;

...

su -c /home/pi/shutdown-daemon.sh &amp;amp;
su -c /home/pi/set_gpio_pins.sh &amp;amp;

&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;*********&lt;/span&gt;
su -c &lt;span class="s2"&gt;&amp;quot;cd /home/pi/ucchusma-pi; /home/pi/.rbenv/shims/bundle exec ruby watcher.rb&amp;quot;&lt;/span&gt;

...

&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;/pre&gt;
&lt;h1&gt;参考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;sudoなしでGPIOにアクセスする

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dissectionbydavid.wordpress.com/2013/10/21/raspberry-pi-using-gpio-wiringpi-without-root-sudo-access/"&gt;Raspberry Pi – using GPIO / WiringPi without root (sudo) access | Dissection by David blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;無線LAN

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kingyo-bachi.blogspot.jp/2013/07/raspberry-pilan.html"&gt;コチョナナバ: Raspberry Piを無線LAN対応させてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.instantsupportsite.com/self-help/raspberry-pi/raspberry-pi-airlink-101-installation-wpa/"&gt;RASPBERRY PI – Airlink 101 Installation with WPA/WPA2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;image書き込み

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/159039/why-is-the-error-dd-dev-rdisk1bs-1m-operation-not-supported-popping-up-whil"&gt;command line - Why is the error, dd: /dev/rdisk1bs=1m: Operation not supported, popping up while trying to instal ubuntu on usb? - Ask Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;シャットダウンフリー化(したい)

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.e-ark.jp/raspberryjamsession-02/"&gt;「コラム：お手軽シャットダウンフリー化」をHTML化してみました (QR1679) | ε-ARK Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;code

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/ucchusma-pi"&gt;fukayatsu/ucchusma-pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/ucchusma-web"&gt;fukayatsu/ucchusma-web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/ucchusma-crx"&gt;fukayatsu/ucchusma-crx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ucchusmaとは?

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ja.wikipedia.org/wiki/%E7%83%8F%E6%9E%A2%E6%B2%99%E6%91%A9%E6%98%8E%E7%8E%8B"&gt;烏枢沙摩明王 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;伝承ひどい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;配線図等を作るツール

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fritzing.org/"&gt;Fritzing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;雑感&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;raspberry pi

&lt;ul&gt;
&lt;li&gt;rbenvでruby2.1.0をインストールするのに2時間ちょっとかかった。&lt;/li&gt;
&lt;li&gt;使ってみて、改めて「小さいlinux pc」なのだなと思った。

&lt;ul&gt;
&lt;li&gt;GPIOで直接電子回路に接続できるのが良い&lt;/li&gt;
&lt;li&gt;アナログ入力も付いてたらもっと良いのに&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;imageを焼く時に、MacbookProのSDカードリーダーが反応しなくて困った

&lt;ul&gt;
&lt;li&gt;結局別のPCから焼いた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fritzing

&lt;ul&gt;
&lt;li&gt;便利&lt;/li&gt;
&lt;li&gt;自分でnapionのパーツ作ろうかと思ったけど、適当なパーツでお茶を濁した。

&lt;ul&gt;
&lt;li&gt;パーツエディタが何度かクラッシュした...&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;実戦投入

&lt;ul&gt;
&lt;li&gt;週明けになる見込み&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>ブログにturbolinksとnprogressを適用した</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/10/turbolinks-and-nprogress/"/>
    <id>http://blog.fukayatsu.com/2014/01/10/turbolinks-and-nprogress/</id>
    <published>2014-01-10T12:26:00Z</published>
    <updated>2014-01-15T14:58:13+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rails/turbolinks"&gt;rails/turbolinks&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ざっくり言うとページ遷移をajaxに置き換えて高速化してくれる。&lt;/li&gt;
&lt;li&gt;rails4からの標準機能。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rstacruz/nprogress"&gt;rstacruz/nprogress&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tecuration.com/2013/09/nprogress"&gt;YouTube風のページローダーを実装する「NProgress.js」 - Tecuration .com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;プログレスバーの発動タイミングはnprogressのreadmeの例をそのまま使っている↓&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;page:fetch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NProgress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;page:change&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NProgress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;page:restore&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NProgress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/fukayatsu.github.io/compare/9e9a51831195d7c8a03cf2500ffa7e2cd576aaab...e7e124020bf24e98c2cfee15b0c34cbe9bdadf1d"&gt;変更の詳細&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;雑感&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;ページ遷移が速く(感じるように)なって、かなり快適になった。&lt;/li&gt;
&lt;li&gt;turbolinksとnprogressの相性がよい&lt;/li&gt;
&lt;li&gt;普段からrailsでturbolinksを使っているものの、何故か静的サイトでturbolinksを使うという発想が無かった。&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>alfredでメモを書くworkflowを作った</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/07/alfred-memo/"/>
    <id>http://blog.fukayatsu.com/2014/01/07/alfred-memo/</id>
    <published>2014-01-07T13:28:00Z</published>
    <updated>2014-01-15T14:58:13+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/alfred-memo"&gt;fukayatsu/alfred-memo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;利用イメージ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;m &amp;lt;memo&amp;gt; + Enter&lt;/code&gt;でメモを追加&lt;br&gt;
&lt;img alt="w50" src="https://f.cloud.github.com/assets/1041857/1859184/69411356-779e-11e3-9d0e-6dacd546a9a4.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;追加されると通知される&lt;br&gt;
&lt;img alt="w50" src="https://f.cloud.github.com/assets/1041857/1859186/6942237c-779e-11e3-9a88-ba2f62aaa48b.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;その日のメモを一覧する時は引数なしで&lt;code&gt;m + Enter&lt;/code&gt;&lt;br&gt;
&lt;img alt="w50" src="https://f.cloud.github.com/assets/1041857/1859190/845798e0-779e-11e3-8a93-6593e8a8413d.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;エディタが立ち上がる&lt;br&gt;
&lt;img alt="ss 2014-01-07 at 22 19 30" src="https://f.cloud.github.com/assets/1041857/1859185/69412ef4-779e-11e3-8577-39bd44d76444.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;雑感&lt;/h1&gt;

&lt;p&gt;自分の環境に最適化されている(Dropbox pathとかSublime Text 3とか)ので、他の人が使う場合はworkflowの編集が必要。気が向いたら汎用化するかもしれない。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Homebrewでフォントをインストールする</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/05/install-fonts-using-homebrew/"/>
    <id>http://blog.fukayatsu.com/2014/01/05/install-fonts-using-homebrew/</id>
    <published>2014-01-05T00:45:00Z</published>
    <updated>2014-01-15T14:58:13+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="/images/2014-01-05-1388885346_1.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="/2013/11/03/merge-fonts/"&gt;半角:全角==1:2な等幅フォントを作る(2013/11/03)&lt;/a&gt;で、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TODO&lt;br&gt;
  　generator公開&lt;br&gt;
  　　素材用のフォントを自動的にダウンロードしてフォント生成するやつを作りたい&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;と書いたが、これをhomebrewのformulaにした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/homebrew-font"&gt;fukayatsu/homebrew-font&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Usage&lt;/h1&gt;
&lt;pre class="highlight text"&gt;$ brew tap fukayatsu/font
$ brew install scpm
$ cp -f /usr/local/Cellar/scpm/[VERSION]/share/fonts/SCPM*.ttf ~/Library/Fonts/
&lt;/pre&gt;
&lt;h1&gt;感想&lt;/h1&gt;

&lt;p&gt;初めてhomebrewのformulaを書いたが、 &amp;quot;See also&amp;quot; で挙げているところを参考にしてわりと簡単に出来た。先人に感謝。&lt;/p&gt;

&lt;p&gt;fontforgeのスクリプトやhomebrewの作法はまだ深追いしていないので、理解を深めていきたい。&lt;br&gt;
例えば&amp;quot;Usage&amp;quot;の最後の&lt;code&gt;cp&lt;/code&gt;をformulaに含めていいのかどうかとか迷っている。&lt;/p&gt;

&lt;p&gt;zipやtarballをダウンロードして、解凍して、スクリプトを実行して、生成物を配置するまでがさくっと自動化出来るのは気持ちが良い。今年はいくつかformula書くと思う。&lt;/p&gt;

&lt;h1&gt;See also&lt;/h1&gt;

&lt;p&gt;これは便利！Homebrewに追加されたtapコマンドはリポジトリを追加して簡単にフォーミュラを増やせる | Macとかの雑記帳&lt;br&gt;
&lt;a href="http://tukaikta.blog135.fc2.com/blog-entry-204.html"&gt;http://tukaikta.blog135.fc2.com/blog-entry-204.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;brew install ricty | 實松アウトプット&lt;br&gt;
&lt;a href="http://sanematsu.wordpress.com/2013/05/11/brew-install-ricty/"&gt;http://sanematsu.wordpress.com/2013/05/11/brew-install-ricty/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;sanemat/homebrew-font&lt;br&gt;
&lt;a href="https://github.com/sanemat/homebrew-font"&gt;https://github.com/sanemat/homebrew-font&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MasayukiFukada/CodeMFont&lt;br&gt;
&lt;a href="https://github.com/MasayukiFukada/CodeMFont"&gt;https://github.com/MasayukiFukada/CodeMFont&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;fukayatsu/homebrew-font&lt;br&gt;
&lt;a href="https://github.com/fukayatsu/homebrew-font"&gt;https://github.com/fukayatsu/homebrew-font&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;fukayatsu/scpm&lt;br&gt;
&lt;a href="https://github.com/fukayatsu/scpm"&gt;https://github.com/fukayatsu/scpm&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>sublime text 3でgolangを実行(go run)する</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/03/go-run-with-st3/"/>
    <id>http://blog.fukayatsu.com/2014/01/03/go-run-with-st3/</id>
    <published>2014-01-03T07:54:00Z</published>
    <updated>2014-01-15T14:58:13+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;p&gt;Tools &amp;gt; Build System &amp;gt; New Build System... でこんな感じに設定する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go.sublime-build&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight javascript"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// &amp;quot;cmd&amp;quot;: [&amp;quot;go&amp;quot;, &amp;quot;run&amp;quot;, $file], // for sublime text 2
&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;shell_cmd&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;go run $file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;selector&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;source.go&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;もしくは、&lt;a href="https://github.com/DisposaBoy/GoSublime"&gt;DisposaBoy/GoSublime&lt;/a&gt;をインストールする。&lt;/p&gt;

&lt;p&gt;これを入れておくとファイル保存時に&lt;code&gt;go fmt&lt;/code&gt;を自動的に実行してくれたり、&lt;br&gt;
いい感じに入力補完もしてくれて便利。&lt;/p&gt;
</content>
  </entry>
</feed>
