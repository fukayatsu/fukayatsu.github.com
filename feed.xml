<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fukayatsu.dev</title>
  <subtitle>under development</subtitle>
  <id>http://blog.fukayatsu.com/</id>
  <link href="http://blog.fukayatsu.com/"/>
  <link href="http://blog.fukayatsu.com/feed.xml" rel="self"/>
  <updated>2014-01-07T13:28:00Z</updated>
  <author>
    <name>fukayatsu</name>
  </author>
  <entry>
    <title>alfredでメモを書くworkflowを作った</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/07/alfred-memo/"/>
    <id>http://blog.fukayatsu.com/2014/01/07/alfred-memo/</id>
    <published>2014-01-07T13:28:00Z</published>
    <updated>2014-01-10T11:24:11+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/alfred-memo"&gt;fukayatsu/alfred-memo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;利用イメージ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;m &amp;lt;memo&amp;gt; + Enter&lt;/code&gt;でメモを追加&lt;br&gt;
&lt;img alt="w50" src="https://f.cloud.github.com/assets/1041857/1859184/69411356-779e-11e3-9d0e-6dacd546a9a4.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;追加されると通知される&lt;br&gt;
&lt;img alt="w50" src="https://f.cloud.github.com/assets/1041857/1859186/6942237c-779e-11e3-9a88-ba2f62aaa48b.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;その日のメモを一覧する時は引数なしで&lt;code&gt;m + Enter&lt;/code&gt;&lt;br&gt;
&lt;img alt="w50" src="https://f.cloud.github.com/assets/1041857/1859190/845798e0-779e-11e3-8a93-6593e8a8413d.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;エディタが立ち上がる&lt;br&gt;
&lt;img alt="ss 2014-01-07 at 22 19 30" src="https://f.cloud.github.com/assets/1041857/1859185/69412ef4-779e-11e3-8577-39bd44d76444.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;雑感&lt;/h1&gt;

&lt;p&gt;自分の環境に最適化されている(Dropbox pathとかSublime Text 3とか)ので、他の人が使う場合はworkflowの編集が必要。気が向いたら汎用化するかもしれない。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Homebrewでフォントをインストールする</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/05/install-fonts-using-homebrew/"/>
    <id>http://blog.fukayatsu.com/2014/01/05/install-fonts-using-homebrew/</id>
    <published>2014-01-05T00:45:00Z</published>
    <updated>2014-01-10T11:24:11+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="/images/2014-01-05-1388885346_1.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="/2013/11/03/merge-fonts/"&gt;半角:全角==1:2な等幅フォントを作る(2013/11/03)&lt;/a&gt;で、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TODO&lt;br&gt;
  　generator公開&lt;br&gt;
  　　素材用のフォントを自動的にダウンロードしてフォント生成するやつを作りたい&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;と書いたが、これをhomebrewのformulaにした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fukayatsu/homebrew-font"&gt;fukayatsu/homebrew-font&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Usage&lt;/h1&gt;
&lt;pre class="highlight text"&gt;$ brew tap fukayatsu/font
$ brew install scpm
$ cp -f /usr/local/Cellar/scpm/[VERSION]/share/fonts/SCPM*.ttf ~/Library/Fonts/
&lt;/pre&gt;
&lt;h1&gt;感想&lt;/h1&gt;

&lt;p&gt;初めてhomebrewのformulaを書いたが、 &amp;quot;See also&amp;quot; で挙げているところを参考にしてわりと簡単に出来た。先人に感謝。&lt;/p&gt;

&lt;p&gt;fontforgeのスクリプトやhomebrewの作法はまだ深追いしていないので、理解を深めていきたい。&lt;br&gt;
例えば&amp;quot;Usage&amp;quot;の最後の&lt;code&gt;cp&lt;/code&gt;をformulaに含めていいのかどうかとか迷っている。&lt;/p&gt;

&lt;p&gt;zipやtarballをダウンロードして、解凍して、スクリプトを実行して、生成物を配置するまでがさくっと自動化出来るのは気持ちが良い。今年はいくつかformula書くと思う。&lt;/p&gt;

&lt;h1&gt;See also&lt;/h1&gt;

&lt;p&gt;これは便利！Homebrewに追加されたtapコマンドはリポジトリを追加して簡単にフォーミュラを増やせる | Macとかの雑記帳&lt;br&gt;
&lt;a href="http://tukaikta.blog135.fc2.com/blog-entry-204.html"&gt;http://tukaikta.blog135.fc2.com/blog-entry-204.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;brew install ricty | 實松アウトプット&lt;br&gt;
&lt;a href="http://sanematsu.wordpress.com/2013/05/11/brew-install-ricty/"&gt;http://sanematsu.wordpress.com/2013/05/11/brew-install-ricty/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;sanemat/homebrew-font&lt;br&gt;
&lt;a href="https://github.com/sanemat/homebrew-font"&gt;https://github.com/sanemat/homebrew-font&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MasayukiFukada/CodeMFont&lt;br&gt;
&lt;a href="https://github.com/MasayukiFukada/CodeMFont"&gt;https://github.com/MasayukiFukada/CodeMFont&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;fukayatsu/homebrew-font&lt;br&gt;
&lt;a href="https://github.com/fukayatsu/homebrew-font"&gt;https://github.com/fukayatsu/homebrew-font&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;fukayatsu/scpm&lt;br&gt;
&lt;a href="https://github.com/fukayatsu/scpm"&gt;https://github.com/fukayatsu/scpm&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>sublime text 3でgolangを実行(go run)する</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/03/go-run-with-st3/"/>
    <id>http://blog.fukayatsu.com/2014/01/03/go-run-with-st3/</id>
    <published>2014-01-03T07:54:00Z</published>
    <updated>2014-01-10T11:24:11+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;p&gt;Tools &amp;gt; Build System &amp;gt; New Build System... でこんな感じに設定する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go.sublime-build&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight javascript"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// &amp;quot;cmd&amp;quot;: [&amp;quot;go&amp;quot;, &amp;quot;run&amp;quot;, $file], // for sublime text 2
&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;shell_cmd&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;go run $file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;selector&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;source.go&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;もしくは、&lt;a href="https://github.com/DisposaBoy/GoSublime"&gt;DisposaBoy/GoSublime&lt;/a&gt;をインストールする。&lt;/p&gt;

&lt;p&gt;これを入れておくとファイル保存時に&lt;code&gt;go fmt&lt;/code&gt;を自動的に実行してくれたり、&lt;br&gt;
いい感じに入力補完もしてくれて便利。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ifttt連携のテスト</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/02/ifttt/"/>
    <id>http://blog.fukayatsu.com/2014/01/02/ifttt/</id>
    <published>2014-01-02T07:15:00Z</published>
    <updated>2014-01-10T11:24:11+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="/images/2014-01-02-1388646962_1.png" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ブログに画像貼り付けるのが面倒くさい問題</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/02/blog-image/"/>
    <id>http://blog.fukayatsu.com/2014/01/02/blog-image/</id>
    <published>2014-01-02T04:11:00Z</published>
    <updated>2014-01-10T11:24:11+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="/2013/12/21/blog/"&gt;LinCastorを使う&lt;/a&gt;ことによってブログを書くのがかなり楽になったが、&lt;br&gt;
まだスクリーンショット等のデスクトップ上の画像ファイルを記事に埋め込むのが面倒だった。&lt;/p&gt;

&lt;p&gt;当初はこれをsublime text 3のプラグインを開発することによって解決しようと思ったのだけど、&lt;br&gt;
実験した結果、ST3上に画像ファイルをドラッグ＆ドロップした時のイベントは拾え無かったので、この方法はひとまず諦めた。&lt;/p&gt;

&lt;p&gt;また、Dropboxや類似のサービス(例えばGyazo)のようなものを使えば、スクリーンショットを撮ったと同時にWeb上にアップロードしてURLを取得することができるが、画像を手元で管理しておきたいのでこれも選択肢から外れた。&lt;/p&gt;

&lt;h2&gt;Automatorでサービスを作る&lt;/h2&gt;

&lt;p&gt;結局任意の画像ファイルを特定のフォルダに適当な名前でコピーして、適切なpathをMarkdown形式でクリップボードにコピーできればストレスはかなりは軽減できる。&lt;/p&gt;

&lt;p&gt;今回はAutomatorを使った。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014-01-02-1388636648_1.png" /&gt;&lt;/p&gt;

&lt;p&gt;これを選択すると、&lt;/p&gt;

&lt;p&gt;&lt;code&gt;icon.png&lt;/code&gt;を&lt;code&gt;TIMESTAMP_1.png&lt;/code&gt;のような名前でmiddlemanの&lt;code&gt;images&lt;/code&gt;フォルダにコピーし、&lt;br&gt;
&lt;code&gt;![](/images/TIMESTAMP_1.png)&lt;/code&gt;という文字列がクリップボードにコピーされる。&lt;/p&gt;

&lt;h3&gt;workflow&lt;/h3&gt;

&lt;p&gt;こんな感じになった。&lt;br&gt;
&lt;img src="/images/2014-01-02-1388636935_1.png" /&gt;&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fileutils&amp;#39;&lt;/span&gt;

&lt;span class="no"&gt;BLOG_IMAGE_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/Users/fukayatsu/github/fukayatsu.github.io/source/images&amp;#39;&lt;/span&gt;
&lt;span class="no"&gt;TIME_STR&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="nf"&gt;.now.strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%Y-%m-%d-%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="nf"&gt;.each.with_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;extname&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="nf"&gt;.extname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;new_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;TIME_STR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}#{&lt;/span&gt;&lt;span class="n"&gt;extname&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="no"&gt;FileUtils&lt;/span&gt;&lt;span class="nf"&gt;.copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;BLOG_IMAGE_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;![](/images/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;h2&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://taiyaki.main.jp/wordpress/2013/03/08/%E3%80%8Cautomator%E3%80%8D%E3%81%A7%E6%96%B0%E3%81%9F%E3%81%AA%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E5%8F%B3%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC%E3%81%AB/"&gt;「Automator」で新たなサービスを右クリックメニューに追加する方法 | Mac教信仰中！！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>goを試す</title>
    <link rel="alternate" href="http://blog.fukayatsu.com/2014/01/01/hello-go/"/>
    <id>http://blog.fukayatsu.com/2014/01/01/hello-go/</id>
    <published>2014-01-01T03:43:00Z</published>
    <updated>2014-01-10T11:24:11+00:00</updated>
    <author>
      <name>fukayatsu</name>
    </author>
    <content type="html">&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;ふかやつが来年学ぶべき言語は『Go』です。 &lt;a href="http://t.co/pFf1wzHZ5r"&gt;http://t.co/pFf1wzHZ5r&lt;/a&gt;&lt;/p&gt;&amp;mdash; ふかやつ (@fukayatsu) &lt;a href="https://twitter.com/fukayatsu/statuses/418214284892463104"&gt;January 1, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;はい&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://golang.org/"&gt;The Go Programming Language&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.google.com/p/go/downloads/list"&gt;Downloads&lt;/a&gt;:
go1.2.darwin-amd64-osx10.8.pkg をインストール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="/images/2014-01-01-go.png" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;顔がうざい&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight text"&gt;% go version
go version go1.2 darwin/amd64

% go -h
Go is a tool for managing Go source code.

Usage:

    go command [arguments]

The commands are:

    build       compile packages and dependencies
    clean       remove object files
    env         print Go environment information
    fix         run go tool fix on packages
    fmt         run gofmt on package sources
    get         download and install packages and dependencies
    install     compile and install packages and dependencies
    list        list packages
    run         compile and run Go program
    test        test packages
    tool        run specified go tool
    version     print Go version
    vet         run go tool vet on packages

Use &amp;quot;go help [command]&amp;quot; for more information about a command.

Additional help topics:

    c           calling between Go and C
    gopath      GOPATH environment variable
    importpath  import path syntax
    packages    description of package lists
    testflag    description of testing flags
    testfunc    description of testing functions

Use &amp;quot;go help [topic]&amp;quot; for more information about that topic.
&lt;/pre&gt;
&lt;p&gt;サンプルコード(一応写経)&lt;/p&gt;
&lt;pre class="highlight go"&gt;&lt;span class="c"&gt;// hello.go&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="k"&gt;package&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, 世界&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;実行してみる&lt;/p&gt;
&lt;pre class="highlight text"&gt;% go run hello.go
Hello, 世界
&lt;/pre&gt;
&lt;p&gt;ビルドして実行してみる&lt;/p&gt;
&lt;pre class="highlight text"&gt;% go build hello.go
% chmod +x hello
% ./hello
Hello, 世界
&lt;/pre&gt;
&lt;p&gt;おー&lt;/p&gt;

&lt;h2&gt;TODO&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;基本の制御構文を学ぶ&lt;/li&gt;
&lt;li&gt;何か作りたいものをgoで作る&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
